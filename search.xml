<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Blog26 猫弟弟领养</title>
      <link href="/posts/449863c6.html"/>
      <url>/posts/449863c6.html</url>
      
        <content type="html"><![CDATA[<p>#北京领养  璇璇，美短，1岁的可爱弟弟，已完成驱虫、免疫及绝育，健康活泼。因家庭变故，我们不得不忍痛割爱，只为给它寻找一个能给予长久陪伴与呵护的家。领养要求：有稳定的住所，不接受租房和户外散养，审核通过，签订领养协议，接受家访和回访。微信 menglinyan123</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191645060.png" alt="image-20241019164509728"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191645321.png" alt="image-20241019164531023"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191645029.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191646572.png" alt="image-20241019164618347"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191646909.png" alt="image-20241019164625157"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191646284.png" alt="image-20241019164651093"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410191647742.png" alt="image-20241019164703300"></p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog25 猫届美女小三花找家啦！</title>
      <link href="/posts/f89f033a.html"/>
      <url>/posts/f89f033a.html</url>
      
        <content type="html"><![CDATA[<p>#北京领养<br>猫届美女小三花找家啦！ 小三花名字是蛋挞，两个月大。非常粘人亲人，特别特别听话，出去玩一招呼就会回来，已经打疫苗第一针，做过各种检测有记录，能吃能喝。<br>【我们的相遇】<br>在校园草坪旁边看到了一屁股粑粑的你，很虚弱，但是喜欢跟在我们屁股后面走，小小一只，难受的母鸡蹲的时候真的当时立马心都被揪住了。迅速问学校超市阿姨借了一个纸箱子，没有课的同学带着你做上了车。我们在各个校园群里征集善款，本就没有收入来源的大学生们，你10元我5元，拼拼凑凑出来了1500元，才得以去医院救治。万幸检查没有猫瘟 ，只是有一点肠胃炎（已痊愈），回来之后就一直被我们养在去年学校的“猫坚强”小猫窝里。校园小流浪救助群从一开始的6.7个人单枪匹马奋斗到现在已经78位爱心人士了。你难受的时候跟去年的小猫“猫坚强”一模一样，母鸡蹲也一样，我感觉可能是上帝安排你再次回到我们身边。猫坚强走的那段时间，大家都很伤心，所以我们希望你可以健健康康的长大。你的名字“蛋挞”是由大家群投票一起投出来的，我们还成立了学校动物保护协会—瑞宠家园。小家的背后是大家，希望你可以带着大家的期待，越来越好。<br>领养限北京，需有稳定住所，不接受租房和散养，只为它们找到最安心的归宿🏠领养不是一时冲动，而是长久的承诺。希望她可以成为你的宝贝，因为她也曾经是我们捧在手心里的宝贝审核通过后，您先要准备好猫猫生活必需品，我们会亲自送猫上门，签订领养协议，不定期进行家访回访和视频回访，守护这份爱的延续如果您已准备好，给这个小生命一个温暖的家，快来联系我们吧！<br>微信：18357110380，期待与您的爱心相遇，共同开启幸福喵生！ #北京领养#小猫找家#爱心传递</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410152118048.png" alt="image-20241015211827593"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410152118290.png" alt="image-20241015211840983"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410152118005.png" alt="image-20241015211850876"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410152119078.png" alt="image-20241015211930661"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410152119176.png" alt="image-20241015211943825"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410152119450.png" alt="image-20241015211951085"></p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog24 值得信赖的猫咪寄养中心！</title>
      <link href="/posts/880be662.html"/>
      <url>/posts/880be662.html</url>
      
        <content type="html"><![CDATA[<p>值得信赖的猫咪寄养中心！<br>我们是一群爱猫如命的救助人，为了坚持救助事业，为了能帮到更多流浪毛孩子，自己动手丰衣足食，欢迎喵主子们来体验！ 加微信 Mao18514255750</p><video width="600" height="400" controls>  <source src="https://raw.githubusercontent.com/lures2019/Typora_image_CDN/refs/heads/main/The%20third%20task.mp4" type="video/mp4">  Your browser does not support the video tag.</video>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog23 致敬基地元老级毛孩儿</title>
      <link href="/posts/877da049.html"/>
      <url>/posts/877da049.html</url>
      
        <content type="html"><![CDATA[<p>在静默的角落，老年犬以它们温柔的眼神诉说着岁月的故事。救助基地，这个爱的港湾，正面临着前所未有的挑战——守护这些毛孩子的夕阳时光。它们步伐虽缓，心灵却渴望关怀；身体渐弱，健康问题频现。每一份关注，都是对生命尊严的致敬；每一次援手，都能为它们驱散孤独与病痛。让我们携手，成为它们晚年最坚实的依靠，用行动证明：爱，永不言弃。🌃🎼💌</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410101524761.webp" alt="图片"></p><h4 id="原文链接及联系方式">原文链接及联系方式</h4><p><a href="https://mp.weixin.qq.com/s?__biz=MzkwODMxMzMxOQ==&amp;mid=2247485329&amp;idx=1&amp;sn=c4034a0c921cfbc4721b1aa394c5a9d8&amp;chksm=c1f5f5160560856fbd7fba8770318c0c95b45337ce6bf27f5a52f8280ef17b5fc75460a5f352&amp;mpshare=1&amp;scene=1&amp;srcid=1010HsatfnUILCwYr2DH9Dll&amp;sharer_shareinfo=acc1c2ca68bf8dd8b742c4554d096101&amp;sharer_shareinfo_first=f1acc02cf44c73c6a6e9be2f7541f778#rd">https://mp.weixin.qq.com/s?__biz=MzkwODMxMzMxOQ==&amp;mid=2247485329&amp;idx=1&amp;sn=c4034a0c921cfbc4721b1aa394c5a9d8&amp;chksm=c1f5f5160560856fbd7fba8770318c0c95b45337ce6bf27f5a52f8280ef17b5fc75460a5f352&amp;mpshare=1&amp;scene=1&amp;srcid=1010HsatfnUILCwYr2DH9Dll&amp;sharer_shareinfo=acc1c2ca68bf8dd8b742c4554d096101&amp;sharer_shareinfo_first=f1acc02cf44c73c6a6e9be2f7541f778#rd</a></p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog22 使用CMake管理C++项目</title>
      <link href="/posts/4dbf9979.html"/>
      <url>/posts/4dbf9979.html</url>
      
        <content type="html"><![CDATA[<p>在 Ubuntu 22.04 下使用 Visual Studio Code (VS Code) 创建一个新的 C++ 项目（如 <code>MyProject</code>），你可以按照以下步骤进行。这个过程会包含创建项目目录、编写代码、配置 CMake 和 VS Code 相关的文件等。</p><h3 id="完整的项目创建和配置步骤">完整的项目创建和配置步骤</h3><h4 id="步骤-1：创建项目目录结构">步骤 1：创建项目目录结构</h4><ol><li><p>打开终端，创建项目文件夹 <code>MyProject</code>：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/MyProject</span><br><span class="line"><span class="built_in">cd</span> ~/MyProject</span><br></pre></td></tr></table></figure></li><li><p>创建项目的基本目录结构：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> src include build</span><br></pre></td></tr></table></figure><ul><li><code>src/</code>：存放源文件（<code>.cpp</code> 文件）。</li><li><code>include/</code>：存放头文件（<code>.h</code> 文件）。</li><li><code>build/</code>：存放编译过程中生成的文件。</li></ul></li><li><p>创建一个 <code>main.cpp</code> 和头文件 <code>mylib.h</code>，以及一个源文件 <code>mylib.cpp</code>：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> src/main.cpp src/mylib.cpp include/mylib.h</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091931782.png" alt="image-20241009193125747"></p><h4 id="步骤-2：编写代码">步骤 2：编写代码</h4><p>编辑 <code>src/main.cpp</code> 文件：</p><p><strong>src/main.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mylib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello, CMake Project!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="built_in">myFunction</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/mylib.cpp</code> 文件：</p><p><strong>src/mylib.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mylib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myFunction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;This is a function from mylib.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑 <code>include/mylib.h</code> 文件：</p><p><strong>include/mylib.h</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYLIB_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYLIB_H</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myFunction</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h4 id="步骤-3：编写-CMakeLists-txt">步骤 3：编写 CMakeLists.txt</h4><p>在项目根目录下创建 <code>CMakeLists.txt</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> CMakeLists.txt</span><br></pre></td></tr></table></figure><p>然后编辑 <code>CMakeLists.txt</code> 文件，内容如下：</p><p><strong>CMakeLists.txt</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.16</span>)</span><br><span class="line"><span class="keyword">project</span>(MyProject)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C++ 标准</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含头文件目录</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加源文件</span></span><br><span class="line"><span class="keyword">set</span>(SOURCES</span><br><span class="line">    src/main.cpp</span><br><span class="line">    src/mylib.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成可执行文件</span></span><br><span class="line"><span class="keyword">add_executable</span>(MyProject <span class="variable">$&#123;SOURCES&#125;</span>)</span><br></pre></td></tr></table></figure><p>这个 CMake 配置文件做了以下工作：</p><ul><li>设置项目名为 <code>MyProject</code>。</li><li>设置 C++17 作为项目的编译标准。</li><li>指定头文件的目录为 <code>include</code>。</li><li>列出项目中的源文件。</li><li>生成可执行文件 <code>MyProject</code>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091933494.png" alt="image-20241009193335449"></p><h4 id="步骤-4：在-VS-Code-中打开项目">步骤 4：在 VS Code 中打开项目</h4><ol><li><p>启动 VS Code，然后打开 <code>MyProject</code> 文件夹：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code ~/MyProject</span><br></pre></td></tr></table></figure></li><li><p>如果尚未安装 <code>CMake Tools</code> 插件，按 <code>Ctrl+Shift+X</code> 搜索并安装 <code>CMake Tools</code> 插件。</p></li><li><p>VS Code 会检测到 <code>CMakeLists.txt</code> 文件，并在左下角显示 <code>CMake</code> 相关的选项。</p></li></ol><h4 id="步骤-5：配置-CMake-和编译项目">步骤 5：配置 CMake 和编译项目</h4><ol><li>按 <code>Ctrl+Shift+P</code> 打开命令面板，输入并选择 <code>CMake: Configure</code>。<ul><li>第一次运行时，VS Code 会询问你选择哪种编译器。选择 <code>GCC</code> 或适合你的系统的编译器。</li></ul></li><li>配置完成后，按 <code>Ctrl+Shift+P</code>，选择 <code>CMake: Build</code> 来编译项目。<ul><li>编译完成后，会在 <code>build/</code> 目录中生成可执行文件 <code>MyProject</code>。</li></ul></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091941745.png" alt="image-20241009194101699"></p><h4 id="步骤-6：调试配置">步骤 6：调试配置</h4><ol><li><p>进入 <code>.vscode</code> 文件夹，创建或编辑 <code>launch.json</code> 文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> .vscode</span><br><span class="line"><span class="built_in">touch</span> .vscode/launch.json</span><br></pre></td></tr></table></figure></li><li><p>编辑 <code>launch.json</code> 文件，内容如下：</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091942589.png" alt="image-20241009194228563"></p><p><strong>.vscode/launch.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C++ Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/MyProject&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CMake: build&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/gdb&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><code>program</code> 字段指定要调试的可执行文件路径。</li><li><code>preLaunchTask</code> 设置为 <code>CMake: build</code>，表示在调试之前会先编译项目。</li></ul><ol><li><p>按 <code>F5</code> 启动调试，会编译并运行项目。你应该在终端中看到输出：</p> <figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello, CMake Project!</span><br><span class="line">This <span class="built_in">is</span> a <span class="keyword">function</span> <span class="keyword">from</span> mylib.</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091943077.png" alt="image-20241009194331027"></p><h4 id="步骤-7：手动编译和运行（可选）">步骤 7：手动编译和运行（可选）</h4><p>如果你想在不使用 VS Code 内置的 CMake 配置的情况下编译，可以在终端中手动执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/MyProject/build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">./MyProject</span><br></pre></td></tr></table></figure><ul><li>这将会在 <code>build/</code> 目录下生成 <code>Makefile</code> 并编译 <code>MyProject</code>。</li><li><code>./MyProject</code> 将会运行生成的可执行文件。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091947071.png" alt="image-20241009194711028"></p><h3 id="总结">总结</h3><ul><li><strong>创建项目结构</strong>：<code>src</code> 目录存放源文件，<code>include</code> 目录存放头文件，<code>build</code> 目录用于生成编译文件。</li><li><strong>编写 CMakeLists.txt</strong>：用于定义项目的编译配置。</li><li><strong>配置 VS Code 的 CMake Tools</strong>：自动化编译和调试过程。</li><li><strong>调试配置（launch.json）</strong>：为调试提供正确的路径和配置。</li></ul><p>在实际的 C++ 项目开发过程中，尤其是涉及多个项目或者经常切换不同项目的情况，有一些配置文件是经常需要修改的。这些文件通常用于管理项目结构、编译选项、库的依赖等。以下是常见的配置文件以及它们的用途：</p><h3 id="1-CMakeLists-txt">1. CMakeLists.txt</h3><p>如果你使用 CMake 来管理项目，那么 <code>CMakeLists.txt</code> 是最需要修改的文件之一。它定义了项目的编译方式、包含的文件、依赖的库等。以下是一些经常需要修改的部分：</p><ul><li><p><strong>项目名称和版本</strong>：</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">project</span>(MyProject VERSION <span class="number">1.0</span>)</span><br></pre></td></tr></table></figure><p>在创建新项目或复制旧项目时，需要修改项目名称和版本。</p></li><li><p><strong>源文件和头文件</strong>：</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(SOURCES</span><br><span class="line">    src/main.cpp</span><br><span class="line">    src/mylib.cpp</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>每当你添加或删除源文件时，<code>SOURCES</code> 列表需要更新。</p></li><li><p><strong>包含目录</strong>：</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span>)</span><br></pre></td></tr></table></figure><p>如果添加新的头文件目录（如新的模块或第三方库），需要在 <code>include_directories</code> 中进行更新。</p></li><li><p><strong>编译选项</strong>：</p><p>如果项目有特殊的编译选项需求，例如启用某些编译器警告或调试选项，需要调整 <code>CMakeLists.txt</code> 中的编译选项：</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -Wall -Wextra -O2&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>添加库依赖</strong>：</p><p>如果项目依赖于第三方库或者你自己编写的静态库或动态库：</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_link_libraries</span>(MyProject PRIVATE MyLibrary)</span><br></pre></td></tr></table></figure><p>每次添加或移除库时需要调整这里的配置。</p></li></ul><h3 id="2-launch-json（VS-Code-调试配置）">2. <code>launch.json</code>（VS Code 调试配置）</h3><p><code>launch.json</code> 是 VS Code 中用于调试的配置文件。每当你创建一个新项目或更改可执行文件的位置时，都需要更新这个文件。常见需要修改的部分包括：</p><ul><li><p><strong>程序路径</strong>：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/MyProject&quot;</span></span><br></pre></td></tr></table></figure><p>如果项目名称改变，或者可执行文件位置改变，需要修改这个路径。</p></li><li><p><strong>工作目录</strong>：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>如果工作目录发生变化（比如项目的根目录改变），则需要更新 <code>cwd</code> 字段。</p></li><li><p><strong>调试前的编译任务</strong>：</p><p>如果更改了编译任务的名称，需要同步更新 <code>preLaunchTask</code>：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CMake: build&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-tasks-json（VS-Code-编译配置）">3. <code>tasks.json</code>（VS Code 编译配置）</h3><p><code>tasks.json</code> 是 VS Code 中用于配置编译任务的文件。在项目发生变化时，以下几项可能需要修改：</p><ul><li><p><strong>编译目标文件</strong>：</p><p>如果项目生成的可执行文件或输出文件名改变，需要修改 <code>args</code> 中的 <code>-o</code> 参数：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;-g&quot;</span><span class="punctuation">,</span> <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span> <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span> <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></li><li><p><strong>编译器路径</strong>：</p><p>如果切换了不同版本的编译器，或者项目需要特定版本的编译器，可能需要修改 <code>command</code> 字段：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/g++-10&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-gitignore">4. <code>.gitignore</code></h3><p>如果项目使用 Git 进行版本控制，<code>.gitignore</code> 文件也是经常需要修改的配置文件。它用于指定哪些文件或目录不应被 Git 追踪。常见的修改包括：</p><ul><li><p><strong>忽略编译生成的文件</strong>：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">build/</span><br><span class="line">*.o</span><br></pre></td></tr></table></figure><p>每次更改项目的输出目录时，可能需要更新 <code>.gitignore</code> 文件。</p></li><li><p><strong>忽略 VS Code 配置文件</strong>：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.vscode/</span><br></pre></td></tr></table></figure><p>如果不希望将 VS Code 的配置提交到版本库，也可以在这里进行忽略。</p></li></ul><h3 id="5-项目-README-和文档">5. 项目 README 和文档</h3><p>在项目开发过程中，<code>README.md</code> 或其他项目文档也经常需要更新，特别是在项目结构或依赖发生变化时。需要修改的内容包括：</p><ul><li><p><strong>项目描述</strong>：当项目功能有较大变化时，需要更新描述。</p></li><li><p><strong>编译和运行指南</strong>：例如，使用 <code>cmake</code> 进行构建的命令步骤：</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">./MyProject</span><br></pre></td></tr></table></figure></li><li><p><strong>依赖列表</strong>：当添加或移除依赖时，需要更新这些依赖的安装步骤或说明。</p></li></ul><h3 id="6-settings-json（VS-Code-配置）">6. <code>settings.json</code>（VS Code 配置）</h3><p><code>settings.json</code> 文件是 VS Code 的用户设置或工作区设置文件。在项目切换时，可能需要调整一些特定的配置：</p><ul><li><p><strong>代码格式化工具</strong>：如 <code>clang-format</code> 的路径。</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;C_Cpp.clang_format_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/local/bin/clang-format&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>特定项目的编译配置</strong>：如果某些项目有特殊的 include 路径，可以在 <code>settings.json</code> 中进行设置：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;C_Cpp.includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;$&#123;workspaceFolder&#125;/include&quot;</span><span class="punctuation">,</span> <span class="string">&quot;/usr/local/include&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="总结-2">总结</h3><p>在多项目开发过程中，以下是经常需要修改的配置文件：</p><ul><li><strong>CMakeLists.txt</strong>：管理项目构建和编译，调整源文件、库依赖、头文件目录等。</li><li><strong>launch.json</strong> 和 <strong>tasks.json</strong>：VS Code 中的编译和调试配置，调整项目路径和调试选项。</li><li><strong>.gitignore</strong>：忽略不需要追踪的文件。</li><li><strong><a href="http://README.md">README.md</a></strong>：更新项目描述、依赖和使用方法。</li><li><strong>settings.json</strong>：VS Code 的用户配置，设置与项目相关的编辑器行为。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> C++ </tag>
            
            <tag> CMake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog21 ubuntu22.04下搭建C++开发环境</title>
      <link href="/posts/372950ab.html"/>
      <url>/posts/372950ab.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091833317.png" alt="image-20241009183332261"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091848523.png" alt="image-20241009184817483"></p><h2 id="配置C-编译环境">配置C++编译环境</h2><h3 id="安装C-编译器">安装C++编译器</h3><p><code>Ubuntu22.04</code>通常自带<code>gcc</code>和<code>g++</code>编译器，但如果没有安装，可以通过以下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install build-essential</span><br></pre></td></tr></table></figure><ul><li>这将安装<code>gcc</code>、<code>g++</code>、<code>make</code>等工具，提供<code>C++</code>编译所需的环境</li><li>确认安装成功，可以检查<code>g++</code>版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091854685.png" alt="image-20241009185424654"></p><h3 id="安装Visual-Studio-Code">安装Visual Studio Code</h3><p>使用下面命令安装<code>VS Code</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> snap install code --classic</span><br></pre></td></tr></table></figure><h3 id="安装C-扩展">安装C++扩展</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091857467.png" alt="image-20241009185743446"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091909091.png" alt="image-20241009190958047"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091911302.png" alt="image-20241009191126260"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091912043.png" alt="image-20241009191221000"></p><h3 id="配置C-编译和调试环境">配置C++编译和调试环境</h3><p>在 <code>VS Code</code> 中，需要创建任务和调试配置，以便编译和运行<code> C++</code> 程序。</p><h4 id="创建任务配置（tasks-json）">创建任务配置（tasks.json）</h4><p><code>tasks.json</code> 用于配置如何编译 C++ 文件。按照以下步骤创建：</p><ol><li>按 <code>Ctrl+Shift+B</code>，VS Code 会提示你创建编译任务。</li><li>选择 <code>Create tasks.json file from template</code>，然后选择 <code>Others</code>。</li><li>打开 <code>.vscode/tasks.json</code> 文件，修改内容如下：</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ build active file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/g++&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;$gcc&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generated task for building C++ file&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><strong>这个配置将使用 <code>g++</code> 编译当前打开的 C++ 文件，并生成与源文件同名的可执行文件。</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091913100.png" alt="image-20241009191344062"></p><h4 id="创建调试配置（launch-json）">创建调试配置（launch.json）</h4><p><code>launch.json</code> 用于配置调试设置。按照以下步骤创建：</p><ol><li>按 <code>F5</code> 或 <code>Ctrl+Shift+D</code> 打开调试面板。</li><li>点击 <code>create a launch.json file</code> 创建调试配置。</li><li>选择 <code>C++ (GDB/LLDB)</code>，然后选择 <code>g++ - Build and debug active file</code>。</li><li>打开 <code>.vscode/launch.json</code> 文件，确保内容类似如下：</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ - Build and debug active file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ build active file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><code>program</code> 字段指定调试时执行的文件路径。</li><li><code>preLaunchTask</code> 设置为 <code>g++ build active file</code>，表示在调试前会先编译程序。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091915092.png" alt="image-20241009191531048"></p><h3 id="编写并运行-C-程序">编写并运行 C++ 程序</h3><h4 id="创建一个简单的-C-文件">创建一个简单的 C++ 文件</h4><p>在 VS Code 中新建一个 <code>hello.cpp</code> 文件，输入以下内容：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091917405.png" alt="image-20241009191700365"></p><h4 id="编译和运行">编译和运行</h4><ol><li><p>按 <code>Ctrl+Shift+B</code>，编译 C++ 文件。这会生成一个可执行文件 <code>hello</code>（在当前目录下）。</p></li><li><p>按 <code>Fn + F5</code> 启动调试，VS Code 将会编译并运行 <code>hello.cpp</code>，并在终端中显示输出：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello, World!</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091918838.png" alt="image-20241009191806800"></p><h3 id="使用终端手动编译和运行（可选）">使用终端手动编译和运行（可选）</h3><p>你也可以在 VS Code 的终端中手动编译和运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -g hello.cpp -o hello</span><br><span class="line">./hello</span><br></pre></td></tr></table></figure><ul><li><code>-g</code> 选项用于生成调试信息。</li><li><code>-o hello</code> 指定输出的可执行文件名。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410091919034.png" alt="image-20241009191931012"></p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog20 使用Ubuntu22.04搭建深度学习环境</title>
      <link href="/posts/972f5071.html"/>
      <url>/posts/972f5071.html</url>
      
        <content type="html"><![CDATA[<p>具体流程没记录，下面是测试环境成功的截图：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410091032278.png" alt="image-20241009103217177"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410091032323.png" alt="image-20241009103227217"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410091032108.png" alt="image-20241009103233018"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202410091032108.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> 深度学习环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog19 三只超萌小橘找家啦！</title>
      <link href="/posts/48b98b21.html"/>
      <url>/posts/48b98b21.html</url>
      
        <content type="html"><![CDATA[<video width="600" height="400" controls>  <source src="https://raw.githubusercontent.com/lures2019/Typora_image_CDN/refs/heads/main/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BB%BB%E5%8A%A1%E8%A7%86%E9%A2%91.mp4" type="video/mp4">  Your browser does not support the video tag.</video><p>#北京领养 三只超萌小橘找家啦！ 宝贝们出生于2024年8月15日，两个活泼弟弟和一个温柔妹妹。它们性格超级亲人，能吃能喝，非常健康 领养限北京，需有稳定住所，不接受租房和散养，只为它们找到最安心的归宿🏠领养不是一时冲动，而是长久的承诺。审核通过后，您先要准备好猫猫生活必需品，我们会亲自送猫上门，签订领养协议，不定期进行家访和回访，守护这份爱的延续如果您已准备好，给这些小生命一个温暖的家，快来联系我们吧！微信：menglin123，期待与您的爱心相遇，共同开启幸福喵生！ #北京领养#小橘猫找家#爱心传递</p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog18 ROS2下配置Gazebo及使用GPU加速</title>
      <link href="/posts/84471611.html"/>
      <url>/posts/84471611.html</url>
      
        <content type="html"><![CDATA[<p>系统是<code>Ubuntu22.04</code>，之前安装好了<code>ROS 2 Humble Hawksbill</code>，现在测试一下环境：</p><h3 id="1、准备工作">1、准备工作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确保系统已经更新</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><h3 id="2、验证ROS2的安装与环境配置">2、验证ROS2的安装与环境配置</h3><h4 id="检查ROS2版本">检查ROS2版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用以下命令来检查当前使用的ROS2发行版名称</span></span><br><span class="line">echo $ROS_DISTRO</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置正确则输出所安装的ROS2版本，如：humble</span></span><br></pre></td></tr></table></figure><h4 id="查看ROS2安装路径中的版本信息">查看ROS2安装路径中的版本信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lures@lures-Redmi-G-Pro-2024:~$ grep &quot;version&quot; /opt/ros/humble/.rosinstall</span><br><span class="line">grep: /opt/ros/humble/.rosinstall: No such file or directory</span><br></pre></td></tr></table></figure><p>缺少<code>.rosinstall</code>文件：<code>/opt/ros/humble/.rosinstall</code>文件不存在是正常的，因为这个文件通常在源代码安装(从源码编译)的情况下才存在。如果你是通过<code>Debian</code>包管理器(例如<code>apt</code>)安装的<code>ROS2</code>，这个文件通常不会存在</p><h4 id="查看ROS2的已安装包">查看ROS2的已安装包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line">lures@lures-Redmi-G-Pro-2024:~$ ros2 pkg list</span><br><span class="line">action_msgs</span><br><span class="line">action_tutorials_cpp</span><br><span class="line">action_tutorials_interfaces</span><br><span class="line">action_tutorials_py</span><br><span class="line">actionlib_msgs</span><br><span class="line">ament_cmake</span><br><span class="line">ament_cmake_auto</span><br><span class="line">ament_cmake_copyright</span><br><span class="line">ament_cmake_core</span><br><span class="line">ament_cmake_cppcheck</span><br><span class="line">ament_cmake_cpplint</span><br><span class="line">ament_cmake_export_definitions</span><br><span class="line">ament_cmake_export_dependencies</span><br><span class="line">ament_cmake_export_include_directories</span><br><span class="line">ament_cmake_export_interfaces</span><br><span class="line">ament_cmake_export_libraries</span><br><span class="line">ament_cmake_export_link_flags</span><br><span class="line">ament_cmake_export_targets</span><br><span class="line">ament_cmake_flake8</span><br><span class="line">ament_cmake_gen_version_h</span><br><span class="line">ament_cmake_gmock</span><br><span class="line">ament_cmake_gtest</span><br><span class="line">ament_cmake_include_directories</span><br><span class="line">ament_cmake_libraries</span><br><span class="line">ament_cmake_lint_cmake</span><br><span class="line">ament_cmake_pep257</span><br><span class="line">ament_cmake_pytest</span><br><span class="line">ament_cmake_python</span><br><span class="line">ament_cmake_ros</span><br><span class="line">ament_cmake_target_dependencies</span><br><span class="line">ament_cmake_test</span><br><span class="line">ament_cmake_uncrustify</span><br><span class="line">ament_cmake_version</span><br><span class="line">ament_cmake_xmllint</span><br><span class="line">ament_copyright</span><br><span class="line">ament_cppcheck</span><br><span class="line">ament_cpplint</span><br><span class="line">ament_flake8</span><br><span class="line">ament_index_cpp</span><br><span class="line">ament_index_python</span><br><span class="line">ament_lint</span><br><span class="line">ament_lint_auto</span><br><span class="line">ament_lint_cmake</span><br><span class="line">ament_lint_common</span><br><span class="line">ament_package</span><br><span class="line">ament_pep257</span><br><span class="line">ament_uncrustify</span><br><span class="line">ament_xmllint</span><br><span class="line">angles</span><br><span class="line">builtin_interfaces</span><br><span class="line">class_loader</span><br><span class="line">common_interfaces</span><br><span class="line">composition</span><br><span class="line">composition_interfaces</span><br><span class="line">console_bridge_vendor</span><br><span class="line">cv_bridge</span><br><span class="line">demo_nodes_cpp</span><br><span class="line">demo_nodes_cpp_native</span><br><span class="line">demo_nodes_py</span><br><span class="line">depthimage_to_laserscan</span><br><span class="line">desktop</span><br><span class="line">diagnostic_msgs</span><br><span class="line">domain_coordinator</span><br><span class="line">dummy_map_server</span><br><span class="line">dummy_robot_bringup</span><br><span class="line">dummy_sensors</span><br><span class="line">eigen3_cmake_module</span><br><span class="line">example_interfaces</span><br><span class="line">examples_rclcpp_minimal_action_client</span><br><span class="line">examples_rclcpp_minimal_action_server</span><br><span class="line">examples_rclcpp_minimal_client</span><br><span class="line">examples_rclcpp_minimal_composition</span><br><span class="line">examples_rclcpp_minimal_publisher</span><br><span class="line">examples_rclcpp_minimal_service</span><br><span class="line">examples_rclcpp_minimal_subscriber</span><br><span class="line">examples_rclcpp_minimal_timer</span><br><span class="line">examples_rclcpp_multithreaded_executor</span><br><span class="line">examples_rclpy_executors</span><br><span class="line">examples_rclpy_minimal_action_client</span><br><span class="line">examples_rclpy_minimal_action_server</span><br><span class="line">examples_rclpy_minimal_client</span><br><span class="line">examples_rclpy_minimal_publisher</span><br><span class="line">examples_rclpy_minimal_service</span><br><span class="line">examples_rclpy_minimal_subscriber</span><br><span class="line">fastrtps_cmake_module</span><br><span class="line">geometry2</span><br><span class="line">geometry_msgs</span><br><span class="line">image_geometry</span><br><span class="line">image_tools</span><br><span class="line">image_transport</span><br><span class="line">interactive_markers</span><br><span class="line">intra_process_demo</span><br><span class="line">joy</span><br><span class="line">kdl_parser</span><br><span class="line">keyboard_handler</span><br><span class="line">laser_geometry</span><br><span class="line">launch</span><br><span class="line">launch_ros</span><br><span class="line">launch_testing</span><br><span class="line">launch_testing_ament_cmake</span><br><span class="line">launch_testing_ros</span><br><span class="line">launch_xml</span><br><span class="line">launch_yaml</span><br><span class="line">libcurl_vendor</span><br><span class="line">libstatistics_collector</span><br><span class="line">libyaml_vendor</span><br><span class="line">lifecycle</span><br><span class="line">lifecycle_msgs</span><br><span class="line">logging_demo</span><br><span class="line">map_msgs</span><br><span class="line">message_filters</span><br><span class="line">nav_msgs</span><br><span class="line">orocos_kdl_vendor</span><br><span class="line">osrf_pycommon</span><br><span class="line">pcl_conversions</span><br><span class="line">pcl_msgs</span><br><span class="line">pendulum_control</span><br><span class="line">pendulum_msgs</span><br><span class="line">pluginlib</span><br><span class="line">pybind11_vendor</span><br><span class="line">python_cmake_module</span><br><span class="line">python_qt_binding</span><br><span class="line">qt_dotgraph</span><br><span class="line">qt_gui</span><br><span class="line">qt_gui_cpp</span><br><span class="line">qt_gui_py_common</span><br><span class="line">quality_of_service_demo_cpp</span><br><span class="line">quality_of_service_demo_py</span><br><span class="line">rcl</span><br><span class="line">rcl_action</span><br><span class="line">rcl_interfaces</span><br><span class="line">rcl_lifecycle</span><br><span class="line">rcl_logging_interface</span><br><span class="line">rcl_logging_spdlog</span><br><span class="line">rcl_yaml_param_parser</span><br><span class="line">rclcpp</span><br><span class="line">rclcpp_action</span><br><span class="line">rclcpp_components</span><br><span class="line">rclcpp_lifecycle</span><br><span class="line">rclpy</span><br><span class="line">rcpputils</span><br><span class="line">rcutils</span><br><span class="line">resource_retriever</span><br><span class="line">rmw</span><br><span class="line">rmw_dds_common</span><br><span class="line">rmw_fastrtps_cpp</span><br><span class="line">rmw_fastrtps_shared_cpp</span><br><span class="line">rmw_implementation</span><br><span class="line">rmw_implementation_cmake</span><br><span class="line">robot_state_publisher</span><br><span class="line">ros2action</span><br><span class="line">ros2bag</span><br><span class="line">ros2cli</span><br><span class="line">ros2cli_common_extensions</span><br><span class="line">ros2component</span><br><span class="line">ros2doctor</span><br><span class="line">ros2interface</span><br><span class="line">ros2launch</span><br><span class="line">ros2lifecycle</span><br><span class="line">ros2multicast</span><br><span class="line">ros2node</span><br><span class="line">ros2param</span><br><span class="line">ros2pkg</span><br><span class="line">ros2run</span><br><span class="line">ros2service</span><br><span class="line">ros2topic</span><br><span class="line">ros_base</span><br><span class="line">ros_core</span><br><span class="line">ros_environment</span><br><span class="line">ros_workspace</span><br><span class="line">rosbag2</span><br><span class="line">rosbag2_compression</span><br><span class="line">rosbag2_compression_zstd</span><br><span class="line">rosbag2_cpp</span><br><span class="line">rosbag2_interfaces</span><br><span class="line">rosbag2_py</span><br><span class="line">rosbag2_storage</span><br><span class="line">rosbag2_storage_default_plugins</span><br><span class="line">rosbag2_transport</span><br><span class="line">rosgraph_msgs</span><br><span class="line">rosidl_adapter</span><br><span class="line">rosidl_cli</span><br><span class="line">rosidl_cmake</span><br><span class="line">rosidl_default_generators</span><br><span class="line">rosidl_default_runtime</span><br><span class="line">rosidl_generator_c</span><br><span class="line">rosidl_generator_cpp</span><br><span class="line">rosidl_generator_py</span><br><span class="line">rosidl_parser</span><br><span class="line">rosidl_runtime_c</span><br><span class="line">rosidl_runtime_cpp</span><br><span class="line">rosidl_runtime_py</span><br><span class="line">rosidl_typesupport_c</span><br><span class="line">rosidl_typesupport_cpp</span><br><span class="line">rosidl_typesupport_fastrtps_c</span><br><span class="line">rosidl_typesupport_fastrtps_cpp</span><br><span class="line">rosidl_typesupport_interface</span><br><span class="line">rosidl_typesupport_introspection_c</span><br><span class="line">rosidl_typesupport_introspection_cpp</span><br><span class="line">rpyutils</span><br><span class="line">rqt_action</span><br><span class="line">rqt_bag</span><br><span class="line">rqt_bag_plugins</span><br><span class="line">rqt_common_plugins</span><br><span class="line">rqt_console</span><br><span class="line">rqt_graph</span><br><span class="line">rqt_gui</span><br><span class="line">rqt_gui_cpp</span><br><span class="line">rqt_gui_py</span><br><span class="line">rqt_image_view</span><br><span class="line">rqt_msg</span><br><span class="line">rqt_plot</span><br><span class="line">rqt_publisher</span><br><span class="line">rqt_py_common</span><br><span class="line">rqt_py_console</span><br><span class="line">rqt_reconfigure</span><br><span class="line">rqt_service_caller</span><br><span class="line">rqt_shell</span><br><span class="line">rqt_srv</span><br><span class="line">rqt_topic</span><br><span class="line">rttest</span><br><span class="line">rviz2</span><br><span class="line">rviz_assimp_vendor</span><br><span class="line">rviz_common</span><br><span class="line">rviz_default_plugins</span><br><span class="line">rviz_ogre_vendor</span><br><span class="line">rviz_rendering</span><br><span class="line">sdl2_vendor</span><br><span class="line">sensor_msgs</span><br><span class="line">sensor_msgs_py</span><br><span class="line">shape_msgs</span><br><span class="line">shared_queues_vendor</span><br><span class="line">spdlog_vendor</span><br><span class="line">sqlite3_vendor</span><br><span class="line">sros2</span><br><span class="line">sros2_cmake</span><br><span class="line">statistics_msgs</span><br><span class="line">std_msgs</span><br><span class="line">std_srvs</span><br><span class="line">stereo_msgs</span><br><span class="line">tango_icons_vendor</span><br><span class="line">teleop_twist_joy</span><br><span class="line">teleop_twist_keyboard</span><br><span class="line">tf2</span><br><span class="line">tf2_bullet</span><br><span class="line">tf2_eigen</span><br><span class="line">tf2_eigen_kdl</span><br><span class="line">tf2_geometry_msgs</span><br><span class="line">tf2_kdl</span><br><span class="line">tf2_msgs</span><br><span class="line">tf2_py</span><br><span class="line">tf2_ros</span><br><span class="line">tf2_ros_py</span><br><span class="line">tf2_sensor_msgs</span><br><span class="line">tf2_tools</span><br><span class="line">tinyxml2_vendor</span><br><span class="line">tinyxml_vendor</span><br><span class="line">tlsf</span><br><span class="line">tlsf_cpp</span><br><span class="line">topic_monitor</span><br><span class="line">tracetools</span><br><span class="line">trajectory_msgs</span><br><span class="line">turtlesim</span><br><span class="line">uncrustify_vendor</span><br><span class="line">unique_identifier_msgs</span><br><span class="line">urdf</span><br><span class="line">urdf_parser_plugin</span><br><span class="line">visualization_msgs</span><br><span class="line">yaml_cpp_vendor</span><br><span class="line">zstd_vendor</span><br></pre></td></tr></table></figure><p>会列出当前已安装的所有<code>ROS2</code>软件包，说明<code>ROS2</code>环境已经安装并配置成功</p><h4 id="验证ROS2功能">验证ROS2功能</h4><p>可以进行下图所示的功能测试：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410081939629.png" alt="image-20241008193939561"></p><p>显示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lures@lures-Redmi-G-Pro-2024:~$ ros2 topic list</span><br><span class="line">/chatter</span><br><span class="line">/parameter_events</span><br><span class="line">/rosout</span><br></pre></td></tr></table></figure><h3 id="3、安装Gazebo">3、安装Gazebo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装Gazebo相关包</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install ros-humble-gazebo-ros-pkgs ros-humble-gazebo-ros ros-humble-ros-gz-sim</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动gazebo的方式</span></span><br><span class="line">ign gazebo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者对于ROS2和Gazebo集成的情况，可以使用ROS2的launch文件来启动Gazebo仿真</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">分别启动Gazebo的服务器端和客户端</span></span><br><span class="line">ros2 launch gazebo_ros gzserver.launch.py</span><br><span class="line">ros2 launch gazebo_ros gzclient.launch.py</span><br></pre></td></tr></table></figure><p>也可以在管理器中找到对应个的应用图标打开：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410081946457.png" alt="image-20241008194640425"></p><h3 id="4、安装NVIDIA驱动和CUDA">4、安装NVIDIA驱动和CUDA</h3><p>此处，我已经在配置深度学习环境时配置了，当前<code>PyTorch</code>和<code>Tensorflow</code>支持的<code>CUDA</code>版本是<code>11.8</code>，所以自己的驱动及下载的<code>CUDA</code>及相关工具包注意版本要一致，要不很麻烦～</p><p>通过下面命令查看<code>GPU</code>和<code>CUDA</code>版本信息，说输出如下图类似，则说明<code>NVIDIA</code>驱动和<code>CUDA</code>安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410081949461.png" alt="image-20241008194943437"></p><h3 id="5、配置Gazebo使用GPU加速">5、配置Gazebo使用GPU加速</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410081951301.png" alt="image-20241008195120276"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410081952715.png" alt="image-20241008195211632"></p><p><code>-v 4</code>使<code>Gazebo</code>以详细模式启动，这样可以在终端中看到<code>Gazebo</code>的加载日志，启动后，查看日志中是否有<code>NVIDIA GPU</code>的信息。同时在另一个窗口运行<code>nvidia-smi</code>，检查<code>GPU</code>使用情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">watch -n 1 nvidia-smi</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">会每秒刷新一次 GPU 使用情况。如果 Gazebo 正在使用 GPU，你应该能够看到 GPU 的使用率上升。</span></span><br></pre></td></tr></table></figure><h3 id="6、使用Gazebo和ROS2的简单测试">6、使用Gazebo和ROS2的简单测试</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410082001201.png" alt="image-20241008200105175"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410082002624.png" alt="image-20241008200237575"></p><p><strong>Gazebo 服务端（<code>gzserver</code>）成功启动</strong>：ROS 2 与 Gazebo 集成部分没有报错，<code>gzserver</code> 进程已经运行，并输出了进程 ID。</p><p><strong>ROS 2 主题列表</strong>：列出了当前活跃的 ROS 2 主题，显示了一些基本的 ROS 2 主题（如 <code>/clock</code>、<code>/rosout</code> 等）。不过，没有看到与 Gazebo 仿真模型、传感器数据相关的主题。</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410082003804.png" alt="image-20241008200322757"></p><p>新建一个<code>demo.sdf</code>文件，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><br><span class="line">&lt;sdf version=&quot;1.6&quot;&gt;</span><br><span class="line">  &lt;model name=&quot;test_camera_box&quot;&gt;</span><br><span class="line">    &lt;static&gt;false&lt;/static&gt;</span><br><span class="line">    &lt;link name=&quot;link&quot;&gt;</span><br><span class="line">      &lt;inertial&gt;</span><br><span class="line">        &lt;mass&gt;1.0&lt;/mass&gt;</span><br><span class="line">      &lt;/inertial&gt;</span><br><span class="line">      &lt;visual name=&quot;visual&quot;&gt;</span><br><span class="line">        &lt;geometry&gt;</span><br><span class="line">          &lt;box&gt;</span><br><span class="line">            &lt;size&gt;0.5 0.5 0.5&lt;/size&gt;</span><br><span class="line">          &lt;/box&gt;</span><br><span class="line">        &lt;/geometry&gt;</span><br><span class="line">        &lt;material&gt;</span><br><span class="line">          &lt;ambient&gt;1 0 0 1&lt;/ambient&gt;</span><br><span class="line">          &lt;diffuse&gt;1 0 0 1&lt;/diffuse&gt;</span><br><span class="line">        &lt;/material&gt;</span><br><span class="line">      &lt;/visual&gt;</span><br><span class="line">      &lt;collision name=&quot;collision&quot;&gt;</span><br><span class="line">        &lt;geometry&gt;</span><br><span class="line">          &lt;box&gt;</span><br><span class="line">            &lt;size&gt;0.5 0.5 0.5&lt;/size&gt;</span><br><span class="line">          &lt;/box&gt;</span><br><span class="line">        &lt;/geometry&gt;</span><br><span class="line">      &lt;/collision&gt;</span><br><span class="line">      &lt;sensor name=&quot;camera&quot; type=&quot;camera&quot;&gt;</span><br><span class="line">        &lt;camera&gt;</span><br><span class="line">          &lt;horizontal_fov&gt;1.047&lt;/horizontal_fov&gt;</span><br><span class="line">          &lt;image&gt;</span><br><span class="line">            &lt;width&gt;640&lt;/width&gt;</span><br><span class="line">            &lt;height&gt;480&lt;/height&gt;</span><br><span class="line">            &lt;format&gt;R8G8B8&lt;/format&gt;</span><br><span class="line">          &lt;/image&gt;</span><br><span class="line">          &lt;clip&gt;</span><br><span class="line">            &lt;near&gt;0.1&lt;/near&gt;</span><br><span class="line">            &lt;far&gt;100&lt;/far&gt;</span><br><span class="line">          &lt;/clip&gt;</span><br><span class="line">        &lt;/camera&gt;</span><br><span class="line">        &lt;always_on&gt;true&lt;/always_on&gt;</span><br><span class="line">        &lt;update_rate&gt;30&lt;/update_rate&gt;</span><br><span class="line">        &lt;plugin name=&quot;camera_controller&quot; filename=&quot;libgazebo_ros_camera.so&quot;&gt;</span><br><span class="line">          &lt;ros&gt;</span><br><span class="line">            &lt;namespace&gt;/my_camera&lt;/namespace&gt;</span><br><span class="line">            &lt;remapping&gt;image_raw:=/camera/image_raw&lt;/remapping&gt;</span><br><span class="line">          &lt;/ros&gt;</span><br><span class="line">          &lt;camera_name&gt;camera&lt;/camera_name&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">      &lt;/sensor&gt;</span><br><span class="line">    &lt;/link&gt;</span><br><span class="line">  &lt;/model&gt;</span><br><span class="line">&lt;/sdf&gt;</span><br></pre></td></tr></table></figure><p>格式化<code>SDF</code>内容为命令行字符串：<code>XML</code>内容的双引号需要进行转义：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ros2 service call /spawn_entity gazebo_msgs/SpawnEntity &quot;&#123;</span><br><span class="line">  name: &#x27;test_camera_box&#x27;,</span><br><span class="line">  xml: &#x27;<span class="meta">&lt;?xml version=\<span class="string">&quot;1.0\&quot; ?&gt;&lt;sdf version=\&quot;1.6\&quot;&gt;&lt;model name=\&quot;test_camera_box\&quot;&gt;&lt;static&gt;false&lt;/static&gt;&lt;link name=\&quot;link\&quot;&gt;&lt;inertial&gt;&lt;mass&gt;1.0&lt;/mass&gt;&lt;/inertial&gt;&lt;visual name=\&quot;visual\&quot;&gt;&lt;geometry&gt;&lt;box&gt;&lt;size&gt;0.5 0.5 0.5&lt;/size&gt;&lt;/box&gt;&lt;/geometry&gt;&lt;material&gt;&lt;ambient&gt;1 0 0 1&lt;/ambient&gt;&lt;diffuse&gt;1 0 0 1&lt;/diffuse&gt;&lt;/material&gt;&lt;/visual&gt;&lt;collision name=\&quot;collision\&quot;&gt;&lt;geometry&gt;&lt;box&gt;&lt;size&gt;0.5 0.5 0.5&lt;/size&gt;&lt;/box&gt;&lt;/geometry&gt;&lt;/collision&gt;&lt;sensor name=\&quot;camera\&quot; type=\&quot;camera\&quot;&gt;&lt;camera&gt;&lt;horizontal_fov&gt;1.047&lt;/horizontal_fov&gt;&lt;image&gt;&lt;width&gt;640&lt;/width&gt;&lt;height&gt;480&lt;/height&gt;&lt;format&gt;R8G8B8&lt;/format&gt;&lt;/image&gt;&lt;clip&gt;&lt;near&gt;0.1&lt;/near&gt;&lt;far&gt;100&lt;/far&gt;&lt;/clip&gt;&lt;/camera&gt;&lt;always_on&gt;true&lt;/always_on&gt;&lt;update_rate&gt;30&lt;/update_rate&gt;&lt;plugin name=\&quot;camera_controller\&quot; filename=\&quot;libgazebo_ros_camera.so\&quot;&gt;&lt;ros&gt;&lt;namespace&gt;/my_camera&lt;/namespace&gt;&lt;remapping&gt;image_raw:=/camera/image_raw&lt;/remapping&gt;&lt;/ros&gt;&lt;camera_name&gt;camera&lt;/camera_name&gt;&lt;/plugin&gt;&lt;/sensor&gt;&lt;/link&gt;&lt;/model&gt;&lt;/sdf&gt;&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="meta">  robot_namespace: &#x27;&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="meta">  initial_pose: &#123; position: &#123; x: 0.0, y: 0.0, z: 0.5 &#125;, orientation: &#123; w: 1.0 &#125; &#125;,</span></span></span><br><span class="line"><span class="string"><span class="meta">  reference_frame: &#x27;world&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;&quot;</span></span></span><br></pre></td></tr></table></figure><p>启动<code>Gazebo</code>的服务端和客户端，确保启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这样会启动 Gazebo 的图形界面和物理模拟服务</span></span><br><span class="line">ros2 launch gazebo_ros gzserver.launch.py</span><br><span class="line">ros2 launch gazebo_ros gzclient.launch.py</span><br></pre></td></tr></table></figure><p>在终端运行之前的<code>XML</code>命令，显示结果：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410082032222.png" alt="image-20241008203224178"></p><p>如果希望查看摄像头的图像输出，可以使用<code>rqt_image_view</code>，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 run rqt_image_view rqt_image_view</span><br></pre></td></tr></table></figure><p>在 <code>rqt_image_view</code> 界面中选择 <code>/my_camera/image_raw</code> 主题，能看到相机的实时图像。</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410082034997.png" alt="image-20241008203452719"></p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> ROS2 </tag>
            
            <tag> Gazebo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog17 Ubuntu22.04下使用OBS进行B站直播</title>
      <link href="/posts/5a2dd50e.html"/>
      <url>/posts/5a2dd50e.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>众所周知，<code>Linux</code>系统是个极具生产力的系统，换言之，就是娱乐软件比较少，不容易分心，但是为个人自控力又比较弱，所以在<code>Linux</code>上搭建<code>OBS</code>进行直播是个不错的选择，那为什么会选择<code>BiliBili</code>，因为之前这个实名认证了，别的平台直播又要认证太麻烦了，然后在国外平台直播又不敢，害怕进去，所以只有这个选择了。</p><h3 id="安装部署">安装部署</h3><p>打开终端后，输入下面命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1、将OBS Studio的官方PPA添加到系统中</span></span><br><span class="line">sudo add-apt-repository ppa:obsproject/obs-studio</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2、更新系统软件包</span></span><br><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3、安装OBS Studio</span></span><br><span class="line">sudo apt install obs-studio</span><br></pre></td></tr></table></figure><p>安装完成后，在应用列表就能找到<code>OBS</code>，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071957588.png" alt="image-20241007195748533"></p><h3 id="配置OBS">配置OBS</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071958647.png" alt="image-20241007195845607"></p><p>主要是设置一下推流码即可，这个可以去<code>B</code>站页面找(但是现在阿<code>B</code>要求至少<code>50</code>个人才能开播)</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410072000240.png" alt="image-20241007200040170"></p><p>此时便能开播了，至于一些更高级的<code>OBS</code>直播界面配置，我不太会用～</p><h3 id="参考资料">参考资料</h3><ul><li><a href="https://juejin.cn/post/7256879435340775484">https://juejin.cn/post/7256879435340775484</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> OBS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog16 Ubuntu22.04下扩展磁盘加载失败解决方案</title>
      <link href="/posts/596732ea.html"/>
      <url>/posts/596732ea.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题简述">问题简述</h3><p>在打开保存<code>PicGo</code>软件的固态拓展盘时候出现下面报错信息：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error mounting /dev/nvme1n1p2 at /media/lures/Others: wrong fs type, bad option, bad superblock on /dev/nvme1n1p2,missing codepage or helper program, or other error</span><br></pre></td></tr></table></figure><h3 id="解决方案">解决方案</h3><h4 id="检查文件系统类型">检查文件系统类型</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid /dev/nvme1n1p2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071944166.png" alt="image-20241007194419115"></p><p>由输出信息可以看出，分区<code>/dev/nvme1n1p2</code>是<code>NTFS</code>文件系统，所以在挂载时需要确保系统已经安装了对<code>NTFS</code>的支持程序，步骤如下：</p><h4 id="安装ntfs-3g">安装ntfs-3g</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install ntfs-3g</span><br></pre></td></tr></table></figure><h4 id="尝试挂载分区">尝试挂载分区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t ntfs-3g /dev/nvme1n1p2 /media/lures/Others</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若/media/lures/Others不存在，则要先创建它</span></span><br><span class="line">sudo mkdir -p /media/lures/Others</span><br></pre></td></tr></table></figure><p>通过以上步骤已经完成了磁盘的加载，效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071947015.png" alt="image-20241007194740974"></p><h4 id="其他问题">其他问题</h4><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071948706.png" alt="image-20241007194818662"></p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog15 Ubuntu22.04下蓝牙耳机连接问题解决方案</title>
      <link href="/posts/69881e38.html"/>
      <url>/posts/69881e38.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题简述">问题简述</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071929680.png" alt="image-20241007192942638"></p><p>如图，就是打开<code>Ubuntu22.04</code>的设置页面时，点击<code>Connection</code>按钮，每次变红后很快又会变黑，压根连不上蓝牙，尝试过重启系统但是没有效果，给<s>学习</s>(玩耍)还是带来一些麻烦，于是便有了这期<code>Blog</code></p><h3 id="解决方案">解决方案</h3><blockquote><p>1、配置蓝牙信息</p></blockquote><p>先按照<code>Linux中文网</code>教程将相关的蓝牙配置给配置上了，具体流程参考教程：<a href="https://cn.linux-console.net/?p=13313#:~:text=%E6%9C%AC%E6%8C%87%E5%8D%97%E5%B0%86%E5%90%91%E6%82%A8%E5%B1%95%E7%A4%BA%E5%A6%82%E4%BD%95">https://cn.linux-console.net/?p=13313#:~:text=本指南将向您展示如何</a></p><blockquote><p>2、下载蓝牙管理工具</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install blueman</span><br></pre></td></tr></table></figure><p>此时可以在应用中找到<code>bluetooth manager</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071935803.png" alt="image-20241007193553746"></p><p>然后进入后，点击<code>search</code>，找到目标耳机后右键<code>connect</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071937922.png" alt="image-20241007193720888"></p><blockquote><p>3、上述办法没有解决</p></blockquote><p>若前两步没有解决问题，可以再次打开设置页面，点击<code>Remove Device</code>，将设备删除</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071938100.png" alt="image-20241007193824060"></p><p>然后将耳机重新开机，接着在<code>bluetooth manager</code>里面重新<code>search</code>和<code>connect</code>，一般这个步骤都能有效解决。</p><h3 id="参考资料">参考资料</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/552920619">https://zhuanlan.zhihu.com/p/552920619</a></li><li><a href="https://cn.linux-console.net/?p=13313">https://cn.linux-console.net/?p=13313</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog14 Ubuntu22.04下配置PicGo及图床</title>
      <link href="/posts/c71211ae.html"/>
      <url>/posts/c71211ae.html</url>
      
        <content type="html"><![CDATA[<h3 id="先看Windows下配置教程">先看Windows下配置教程</h3><p>文章链接：<a href="https://lures2019.github.io/posts/236e1c4a.html">https://lures2019.github.io/posts/236e1c4a.html</a></p><h3 id="Ubuntu22-04下配置">Ubuntu22.04下配置</h3><h4 id="在Ubuntu22-04下生存rsa密钥并部署到Github">在Ubuntu22.04下生存rsa密钥并部署到Github</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1、安装ssh</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo apt install openssh-server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2、生成SSH密钥对，输出全部enter</span></span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3、查看公钥并复制</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4、将公钥添加到github中</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071910520.png" alt="image-20241007191052479"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071911991.png" alt="image-20241007191140930"></p><h4 id="在Github上配置图床及CDN">在Github上配置图床及CDN</h4><p>按照在<code>Windows</code>下配置同样流程，新建仓库<code>Ubuntu_Image</code>，后面操作一样，注意还是要记住<code>token</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071913294.png" alt="image-20241007191348255"></p><h4 id="下载PicGo并配置">下载PicGo并配置</h4><p>打开链接：<a href="https://github.com/Molunerfinn/PicGo/releases%EF%BC%8C%E4%B8%8B%E8%BD%BD%E4%BB%A5%60AppImage%60%E7%BB%93%E5%B0%BE%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%8C%E5%A6%82%E5%9B%BE%E6%89%80%E6%98%AF%EF%BC%9A">https://github.com/Molunerfinn/PicGo/releases，下载以`AppImage`结尾的文件，如图所是：</a></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071916217.png" alt="image-20241007191613162"></p><p>下载下来的文件在<code>Ubuntu22.04</code>下面其实已经是可以双击运行的，运行过程中，在<code>Ubuntu22.04</code>的右上角点击放大主窗口然后进入页面配置，配置教程同<code>Windows</code>，配置好的界面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071918740.png" alt="image-20241007191833707"></p><p>此时不放心的话可以在主页面进行上传测试，如果图片上传后显示蓝色即为成功，红色即为失败，具体失败解决办法参考<code>WIndows</code>教程</p><h4 id="配置Typota自上传图片">配置Typota自上传图片</h4><p>首先一定要记得手动打开<code>PicGo</code>软件，后面<code>Typora</code>上传才会成功</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071921611.png" alt="image-20241007192114573"></p><p>此时可以通过验证图片上传选项来测试结果是否正确～</p><h4 id="参考资料">参考资料</h4><ul><li><a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5#:~:text=%E9%A6%96%E5%85%88%20ssh-key">https://git-scm.com/book/zh/v2/服务器上的-Git-生成-SSH-公钥#:~:text=首先 ssh-key</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#picgo-is-here">https://picgo.github.io/PicGo-Doc/zh/guide/#picgo-is-here</a></li><li><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog13 Ubuntu22.04下使用Clash教程</title>
      <link href="/posts/103cfa43.html"/>
      <url>/posts/103cfa43.html</url>
      
        <content type="html"><![CDATA[<h3 id="创建文件夹与下载二进制文件">创建文件夹与下载二进制文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1、打开终端 Ctrl + Shift + T</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2、在home目录下面创建clash文件夹</span></span><br><span class="line">sudo mkdir ~/clash</span><br><span class="line">cd ~/clash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3、下载适合的Clash二进制文件并解压后重命名为clash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https://github.com/DustinWin/clash_singbox-tools/releases/tag/Clash-Premium</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071840788.png" alt="image-20241007184059727"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载的文件若保存到 Downloads文件夹</span></span><br><span class="line">cd ~/Downloads</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压缩文件</span></span><br><span class="line">tar -xzvf clashpremium-release-linux-amd64.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压后的文件夹为CrashCore，将其重命名为clash</span></span><br><span class="line">mv CrashCore clash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置执行权限</span></span><br><span class="line">sudo chmod +x clash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">移动到目标文件夹</span></span><br><span class="line">mv clash ~/clash</span><br></pre></td></tr></table></figure><h3 id="下载clash配置文件">下载clash配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入到clash目录后，执行下面命令：</span></span><br><span class="line">wget -O config.yaml &quot;https://ctdfq.no-mad-world.club/link/cySerWWAhUy18txx?clash=3&quot;</span><br></pre></td></tr></table></figure><h3 id="启动clash及代理">启动clash及代理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./clash -d .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此时可以访问Clash Dashboard进行切换节点、测延迟等操作</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:9000</span></span><br></pre></td></tr></table></figure><h3 id="设置全局代理">设置全局代理</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071849998.png" alt="image-20241007184936955"></p><p>此时在<code>Clash Dashboard</code>中<code>HTTP</code>和<code>HTTPS</code>代理都设置为<code>127.0.0.1: 7892</code>，填写<code>Socks</code>主机为<code>127.0.0.1:7893</code>，启动系统代理</p><p>可以使用下面命令来检查代理配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lures@lures-Redmi-G-Pro-2024:~$ echo $http_proxy</span><br><span class="line">http://localhost:7892</span><br><span class="line">lures@lures-Redmi-G-Pro-2024:~$ echo $https_proxy</span><br><span class="line">http://localhost:7892</span><br><span class="line">lures@lures-Redmi-G-Pro-2024:~$ </span><br></pre></td></tr></table></figure><p>修改<code>clash</code>下面的<code>config.yaml</code>文件，将端口改为<code>7892</code>，类似下面：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port:</span> <span class="number">7892</span></span><br><span class="line"><span class="attr">socks-port:</span> <span class="number">7893</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">Rule</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:9090</span></span><br><span class="line"><span class="attr">hosts:</span></span><br><span class="line">  <span class="attr">time.facebook.com:</span> <span class="number">17.253</span><span class="number">.84</span><span class="number">.125</span></span><br><span class="line">  <span class="attr">time.android.com:</span> <span class="number">17.253</span><span class="number">.84</span><span class="number">.125</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">use-hosts:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">nameserver:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.6</span><span class="number">.6</span><span class="number">.6</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tcp://223.5.5.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tcp://223.6.6.6</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://dns.google:853</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://8.8.8.8:853</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://8.8.4.4:853</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://dns.alidns.com</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://223.5.5.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://223.6.6.6</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://dot.pub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://1.12.12.12</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://120.53.53.53</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.google/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://8.8.8.8/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://8.8.4.4/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.alidns.com/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://223.5.5.5/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://223.6.6.6/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://doh.pub/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://1.12.12.12/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://120.53.53.53/dns-query</span></span><br><span class="line">  <span class="attr">default-nameserver:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.6</span><span class="number">.6</span><span class="number">.6</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tcp://119.29.29.29</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tcp://223.5.5.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tcp://223.6.6.6</span></span><br><span class="line"><span class="attr">proxies:</span></span><br></pre></td></tr></table></figure><p>若发现<code>7892</code>和<code>7893</code>端口被占用，可以换其它的端口来替代</p><h3 id="clash运行界面">clash运行界面</h3><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Ubuntu_Image/PicGo/202410071856893.png" alt="image-20241007185631857"></p><p>有其他问题可以问<code>chatgpt</code>，个人感觉这个魔改版的<code>clash</code>是机场主自己写的，但是存在至少5年了。</p><h3 id="参考资料">参考资料</h3><ul><li><a href="https://ikuuu.pw/user/tutorial?os=linux&amp;client=clash##">https://ikuuu.pw/user/tutorial?os=linux&amp;client=clash##</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu22.04 </tag>
            
            <tag> Clash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog12 猫咪奢华假期，从大兴旧宫寄养中心开始！</title>
      <link href="/posts/a4724e6a.html"/>
      <url>/posts/a4724e6a.html</url>
      
        <content type="html"><![CDATA[<video width="600" height="400" controls>  <source src="https://raw.githubusercontent.com/lures2019/Typora_image_CDN/refs/heads/main/8bd50fc19d9cdf5c0bdecb3fcc7970f8.mp4" type="video/mp4">  Your browser does not support the video tag.</video><p>【猫咪奢华假期，从大兴旧宫寄养中心开始！】</p><p>🌟宠物爸妈必看！大兴旧宫藏着一处猫咪的天堂——超豪华寄养中心，让您的喵主子享受五星级待遇！</p><p>🏡每一只喵星人都能拥有独立多层别墅，宽敞空间自由奔跑，攀爬嬉戏无拘无束，尽享贵族般的居住体验！</p><p>👩🏻‍⚕️安全守护，我们从不松懈！24小时监控无死角，给爱宠最坚实的健康保障。</p><p>💰性价比之王！价格亲民，让豪华不再遥不可及，轻松为爱宠预订一个难忘的假期。</p><p>⏰小长假临近，快人一步预订吧！大兴旧宫寄养中心，让您的猫咪在温馨与专业中度过每一个欢乐时光。</p><p>📱即刻添加微信 Mao18514255750，了解更多详情，为您的猫咪预订专属幸福假期！别让爱等待，给喵主子一个惊喜吧！#北京猫咪寄养中心#猫咪寄养#宠物寄养</p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog11 华为杯数学建模比赛</title>
      <link href="/posts/b0c85e88.html"/>
      <url>/posts/b0c85e88.html</url>
      
        <content type="html"><![CDATA[<h3 id="过程">过程</h3><p>和杨兄是在水导群认识的，当时看了他的建立觉得他很厉害，然后就看他朋友圈说找个数学建模队友，然后当时有点不好意思的加入了。到比赛前也没一起训练，比赛第一天他有课，我跟肖兄就是看了看题，仅有的进度就是第一天晚上11点多一起开了个语音选择了地理大数据题即<code>D</code>题。</p><p>第二天和第三天其实也没啥进度，就好像是我跟肖兄各搞个的，我用<code>Gpt 4o-plus</code>和网上的一个思路对已有的数据集做处理然后数据可视化，第四天和第五天开始赶进度，第四天我还是跟着网上思路对另一个数据集进行处理，使用多元线性回归、多项式回归、随机森林、<code>SVR</code>这些模型对数据进行训练，然后过采样欠采样损失函数这种使模型呈现出的效果好点。第五天凌晨2点多水完第三问，总之留给论文的时间不多了，所以最后论文出现了很多格式上的问题没有时间修改，几乎没得奖希望了！</p><h3 id="感触">感触</h3><ul><li>这次建模确实挺累的，两天只睡了5h左右</li><li>论文写作也不是难事，不要想着一步到位，可以先利用<code>gpt</code>等将初版写好，后面再改进</li><li>从项目中学习，进步的才会更快，<code>gpt4o-plus</code>该买还是买，确实方便</li></ul><h3 id="学习了">学习了</h3><ul><li>在远程服务器上跑模型</li><li>如何根据已有实验完成论文的初稿</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409251818417.png" alt="image-20240925181814353"></p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog10 Zotero使用教程</title>
      <link href="/posts/8b48d892.html"/>
      <url>/posts/8b48d892.html</url>
      
        <content type="html"><![CDATA[<h3 id="Preface">Preface</h3><p>科创公司这边最近给了3份论文让我们改版式，于是在之前<code>MathType</code>配置好了之后，也是成功用在论文修改中了，感觉使用后确实挺方便，下面来简单看一下效果：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409191727703.png" alt="image-20240919172715640"></p><p>右对齐且式右边编号修改后能自动改变引用，真的挺方便，大伙有机会可以试试！</p><p>跟博士师姐说了之后建议我再使用下<code>Zotero</code>，于是便有了本期笔记！<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p><h3 id="References">References</h3><h4 id="Zotero零基础保姆级教程"><a href="https://www.bilibili.com/video/BV1o3411Q7JQ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=e3d69e895d76a53ec59141bcdd17b141">Zotero零基础保姆级教程</a></h4><ul><li><p>在首选项中设置语言、文件夹存放位置</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\data\Zotero</span><br></pre></td></tr></table></figure></li><li><p>建立文件夹进行分类，然后文献导入</p><p>使用浏览器插件，可以讲页面的内容导入到对应的目标文件夹中</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409191904414.png" alt="image-20240919190452314"></p></li><li><p><code>shift</code> + 文献拖动 从一个文件夹到另一个文件夹，不同时归属于两个文件夹</p></li><li><p><code>ctrl</code> + 文献 可以看到当前文件归属于哪个文件夹</p></li><li><p>可以自己管理标签</p></li><li><p>在<code>word</code>中可以使用<code>Zotero</code>方便引用</p></li></ul><h4 id="Zotero文献管理软件使用指南——入门篇"><a href="https://blog.csdn.net/l903445981/article/details/119960684">Zotero文献管理软件使用指南——入门篇</a></h4><p>视频中提到的<a href="https://github.com/l0o0/jasminum">茉莉花插件</a>可以在这里面下载</p><h4 id="Zotero-translators-中文仓库"><a href="https://github.com/l0o0/translators_CN">Zotero translators 中文仓库</a></h4><p>针对中文文献下载的一个工具，此时便可以下载包括知网在内的很多论文了！</p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zotero </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog9 MathType使用笔记</title>
      <link href="/posts/fc844b8e.html"/>
      <url>/posts/fc844b8e.html</url>
      
        <content type="html"><![CDATA[<h3 id="破解安装">破解安装</h3><p>有能力可以支持正版，<code>30</code>天免费试用。</p><p>破解版安装教程到微信公众号或者浏览器上搜索，之前看了很多文章都被删了。</p><h3 id="参考资料">参考资料</h3><h5 id="学术论文写作时，word中Mathtype的使用"><a href="https://www.bilibili.com/video/BV1TL4y1A7pX/?spm_id_from=333.337.search-card.all.click&amp;vd_source=e3d69e895d76a53ec59141bcdd17b141">学术论文写作时，word中Mathtype的使用</a></h5><p>博主主要介绍了几点：</p><ul><li>在<code>word</code>写论文中要插入行间公式时可以选择<code>右编号</code>，此时论文公式会自动右对齐</li><li>要进行<code>式(0.1)</code>这种引用公式时可以使用选项<code>插入引用</code>然后选择上面公式，这样即使公式变动也能自动更新</li><li>当一行中符号往上飘的时候，可以选择<code>切换Tex</code>点<code>2</code>次，结果会正常</li><li>可以在<code>MathType</code>的<code>预置--&gt;工作区预置--&gt;允许从键盘输入TeX语言</code></li></ul><h4 id="找Mathpix平替">找Mathpix平替</h4><p><a href="https://simpletex.net/">SimpleTex主页——致力于提供先进的公式识别/文档识别解决方案</a></p><h4 id="PPT利用LaTeX输入公式">PPT利用LaTeX输入公式</h4><p><a href="https://blog.csdn.net/lyh458/article/details/130768651">PPT / Powerpoint中利用LaTeX输入公式_ppt插入latex公式-CSDN博客</a></p><p>参考这篇文章下载对应的插件，然后<code>PPT</code>启用宏，在添加过程中遇到<code>信任</code>问题，可以参考下面文章：</p><p><a href="https://blog.csdn.net/weixin_46585199/article/details/130298023">一定解决Excel“安全风险 microsoft 已阻止宏运行 因为此文件的来源不受信任问题”_microsoft已阻止宏运行,因为此文件的来源不受信任-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> MathType </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog8 Python爬取线代班级名单</title>
      <link href="/posts/346d96ca.html"/>
      <url>/posts/346d96ca.html</url>
      
        <content type="html"><![CDATA[<h4 id="大致介绍">大致介绍</h4><p>上线性代数与矩阵论B的时候加了老师微信，浅问了一个问题，然后老师就认为我是一个勤奋努力的孩子，教师节的时候顺手发了个祝福，然后老师就让我当课代表收发作业了。</p><p>好多年没当课代表了，尤其是现在几乎没多少认识的人，有点诚惶诚恐，于是想着提前把班级名单爬下来，然后收作业的时候可以给人打勾，到时候给老师发过去。</p><p>想法还好，下午就要第一次收作业了，祝我好运！</p><h4 id="爬虫代码">爬虫代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> parsel</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Spider</span>():</span><br><span class="line">    url = <span class="string">&quot;http://yjsglxt.cumtb.edu.cn/Gstudent/Course/ClassStudent.aspx?EID=boJN9rxzJT9s-R0vsK2M7ZrxGKNuWLTFwKWQAx!NdLv9WtXpfH1vCg%3d%3d&amp;UID=&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;LoginType=1; DropDownListWeeks=1; ASP.NET_SessionId=iqekgu3in4kqraxef5wuddpj; DropDownListXqu=; DropDownListYx_xsbh=&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;yjsglxt.cumtb.edu.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;origin&#x27;</span>: <span class="string">&#x27;http://yjsglxt.cumtb.edu.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;http://yjsglxt.cumtb.edu.cn/Gstudent/Course/ClassStudent.aspx?EID=mdhL4OSciaEFztuyJzfZqXKcPFvgtDX84VosnP321!aj0H0VBxK6EA==&amp;UID=MSJ2410100010&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36 Edg/128.0.0.0&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    response.encoding = response.apparent_encoding</span><br><span class="line">    <span class="comment"># 构建爬取原则</span></span><br><span class="line">    select = parsel.Selector(response.text)</span><br><span class="line">    results = select.xpath(<span class="string">&#x27;//table[@id=&quot;ctl00_contentParent_dgData&quot;]/tr&#x27;</span>).getall()</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;线性代数班级.csv&quot;</span>, mode=<span class="string">&quot;a+&quot;</span>, newline=<span class="string">&quot;&quot;</span>, encoding=<span class="string">&quot;utf-8-sig&quot;</span>)</span><br><span class="line">    csv_writer = csv.writer(f)</span><br><span class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> results[<span class="number">1</span>:-<span class="number">1</span>]:</span><br><span class="line">        sel = parsel.Selector(result)</span><br><span class="line">        <span class="built_in">id</span> = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">0</span>].get()  <span class="comment"># 学号</span></span><br><span class="line">        name = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">1</span>].get()  <span class="comment"># 姓名</span></span><br><span class="line">        sex = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">2</span>].extract()  <span class="comment"># 性别</span></span><br><span class="line">        grade = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">3</span>].extract()  <span class="comment"># 年级</span></span><br><span class="line">        college = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">4</span>].extract()  <span class="comment"># 所属院系</span></span><br><span class="line">        major = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[-<span class="number">1</span>].extract()  <span class="comment"># 专业名称</span></span><br><span class="line"></span><br><span class="line">        csv_writer.writerow([<span class="built_in">id</span>, name, sex, grade, college, major])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 以追加写的方式创建一个csv文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;线性代数班级.csv&quot;</span>, mode=<span class="string">&quot;a+&quot;</span>, newline=<span class="string">&quot;&quot;</span>, encoding=<span class="string">&quot;utf-8-sig&quot;</span>)</span><br><span class="line">    csv_writer = csv.writer(f)</span><br><span class="line">    csv_writer.writerow([<span class="string">&quot;学号&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;性别&quot;</span>, <span class="string">&quot;年级&quot;</span>, <span class="string">&quot;所属院系&quot;</span>, <span class="string">&quot;专业名称&quot;</span>])</span><br><span class="line">    <span class="comment"># 后面调用函数</span></span><br><span class="line">    Spider()</span><br></pre></td></tr></table></figure><p>这个页面是个<code>post</code>请求，且比较奇怪的一点在于此<code>post</code>在原网页上并不能通过<code>page</code>等参数来跳转的下一页，爬虫的时候发现的规律是需要自己手动点，然后爬虫，所以为了<code>csv</code>文件的美观，我是把<code>main</code>里面的文件操作先注释，直到最后一次再取消注释，最后标签其实会写到<code>csv</code>文件的最后一行，需要手动剪切插入到第一行。</p><p>注意：如果自己需要修改的话，确保登录状态，然后自己按照请求头等信息修改！</p><h4 id="效果一览">效果一览</h4><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409110910314.png" alt="image-20240911091021104"></p><h4 id="最近工作">最近工作</h4><p>最近导师那边的科创中心经常安排杂活，个人的学习受到了影响，导师长时间不回复的行为有时候会让我很内耗，昨晚就想来想去失眠到1点多，仔细想了想，放弃导师的指导，自己按照培养计划研一完成毕业要求，后面自己学点东西。不抱期待，不受伤害！</p><p>昨天上了个集团专家的科技写作课，昨晚整理公司所属非核心期刊的时候发现了一篇论文给了灵感，最近今天准备读下<code>10</code>篇左右相关的论文并完成前置算法的学习及代码的编写，希望这个月能完成论文的初稿！</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> requests </tag>
            
            <tag> parsel </tag>
            
            <tag> csv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog7 英语学习计划</title>
      <link href="/posts/a965601.html"/>
      <url>/posts/a965601.html</url>
      
        <content type="html"><![CDATA[<h3 id="Preface">Preface</h3><p>昨天去煤科总院开了研究生开学典礼及开学第一课，听了专家们讲座对研究生阶段的学习有了些比较清楚的认知，但是这不是最重要的，个人觉得最重要的事情是关于英语学习方面的事：</p><ul><li>英语六级考到500+方便以后的申博【研1要考过，后续不让考了】</li><li>雅思考到6.5以上可以走公司的澳大利亚新南威尔士和<a href="https://zhida.zhihu.com/search?q=%E4%BC%8D%E4%BC%A6%E8%B4%A1&amp;zhida_source=entity&amp;is_preview=1">伍伦贡</a>大学的项目，拿双学位证书【计划研1过】</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409040717966.png" alt="新南威尔士雅思成绩要求"></p><p>其他学校语言要求：<a href="https://www.chinaielts.org/about_ielts/global_recognition_ranking/91324.shtml#:~:text=Massachuse">2024年QS世界大学排名TOP200及雅思要求 - 各国院校机构排名 - 认可的国家与机构 - 选择雅思 - 首页 (chinaielts.org)</a></p><h3 id="六级备考">六级备考</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">报名时间：</span><br><span class="line">2024年9月20日12：00~9月25日17：00</span><br><span class="line">笔试时间：</span><br><span class="line">2024年12月14日(101天)</span><br><span class="line">复习资料：</span><br><span class="line">20天背完六级核心词汇(ipad/炭炭背) + 真题(张建1黄皮书已买)</span><br></pre></td></tr></table></figure><p>1、单词</p><p>词书<code>1</code>天<code>1</code>个<code>list</code>，边听录音边盯着词书来记忆，一个<code>list</code>录音放完之后挡住自测，这样<code>循环5次</code>左右，直到有几个词总是不会，<strong>再用抄写来记忆</strong>，最后自测基本无误后结束。</p><ul><li>先集中背英译汉，再汉译英</li><li>高频词背完英汉互译，要给自己默写英译汉和汉译英<strong>两轮</strong></li><li>有时间把中频词同样的操作，低频词和零频词可以不管</li></ul><p>2、听力(真题)</p><ul><li>做听力真题像考试时一样，赶在文本播放前先划选项关键词</li><li>先看文本听录音过一遍，遇到不会的词和短语标注，后面再重复1次，然后闭着眼睛听不会的勾出来，睡前再听一次，早读读一次</li></ul><p>3、阅读(真题)</p><ul><li>练真题掐时间，告诉自己<code>50</code>分钟一到立刻停笔</li><li>阅读文本尽量不留死角，从文段到题目选项，难词、长难句都弄懂，好的句式、词组要积累下来，对写作和翻译有用</li></ul><p>4、真题(写作翻译)</p><ul><li>阅读文本积累的好词好句在写作中能用到</li><li>写作的谋篇布局要有逻辑</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">计划安排：</span><br><span class="line">1）每天新单词100个，理论上41天完成【最高压力值600词/天】</span><br><span class="line">2）阅读每周精度2篇</span><br><span class="line">3）听力每周完成一套精听</span><br><span class="line">4）写作翻译每周各来一次</span><br><span class="line">5）早读在自习室过一下艾宾浩斯单词 + 精读后的阅读 + 精听后的听力</span><br><span class="line"></span><br><span class="line">tips:</span><br><span class="line">- 可以在干别的事累了之后做，养成习惯</span><br><span class="line">- 以一个新blog的形式记录每周任务完成否，更细致的可以记录当天都做了什么(考完之后上传)</span><br></pre></td></tr></table></figure><h3 id="雅思备考">雅思备考</h3><p>暂时不急，等<code>大学英语六级</code>考过了之后再说，寒假的时候可以着手处理</p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语学习 </tag>
            
            <tag> 未来规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog6 Python爬取研1必修课及选修课</title>
      <link href="/posts/4f71efd0.html"/>
      <url>/posts/4f71efd0.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求">需求</h3><p>今天下午开组会，当半主动的向老师要求研一期间参与项目，要老师以严厉的方式对待后~</p><p>老师让把研究生选课信息发给他看，选择跟我们方向比较相关的<code>选修课</code>，在获取足够的选修学分同时也能对未来的项目有些许帮助</p><p>于是便有了本篇<code>blog</code>，下面简单带大家看一下~</p><h3 id="爬虫分析">爬虫分析</h3><p>1、无论是以何种形式存放数据，我们需要做的第一步便是获取网站的数据，先让我们看下浏览器页面(快捷键<code>Fn</code> + <code>F12</code>)</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302041575.png" alt="image-20240830204148445"></p><p>2、找到存放数据的文件</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302043727.png" alt="image-20240830204323469"></p><p>3、查看请求头等信息</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302045293.png" alt="image-20240830204548231"></p><p>4、既然通过上面分析发现数据是json格式，考虑用<code>csv</code>文件进行存储，因为可以按照单元格的值进行筛选</p><h3 id="爬虫源码">爬虫源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://125.34.90.207:8090/prod-api/psmp/lession/trainScheme/requirement?trainSchemeId=82&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;填写你的cookie&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;authorization&#x27;</span>: <span class="string">&#x27;填写你的authorization&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;125.34.90.207:8090&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;http://125.34.90.207:8090/student/plan/selectPlan&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36 Edg/128.0.0.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(url, headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding</span><br><span class="line">data = json.loads(response.text)</span><br><span class="line">lessons = data[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;lessionList&#x27;</span>]</span><br><span class="line"><span class="comment"># 创建csv文件存储爬取的数据</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;研1选课信息.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">csv_writer = csv.writer(file)</span><br><span class="line">csv_writer.writerow([<span class="string">&quot;课程编号&quot;</span>, <span class="string">&quot;课程分类&quot;</span>, <span class="string">&quot;课程性质&quot;</span>, <span class="string">&quot;课程名称&quot;</span>, <span class="string">&quot;学时&quot;</span>, <span class="string">&quot;学分&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> lesson <span class="keyword">in</span> lessons:</span><br><span class="line">    <span class="comment"># 获取每个课程的信息</span></span><br><span class="line">    lessionNo = lesson[<span class="string">&#x27;lessionNo&#x27;</span>].strip()  <span class="comment"># 课程编号</span></span><br><span class="line">    lessionTypeName = lesson[<span class="string">&#x27;lessionTypeName&#x27;</span>].strip()  <span class="comment"># 课程分类</span></span><br><span class="line">    xingZhiName = lesson[<span class="string">&#x27;xingZhiName&#x27;</span>].strip()  <span class="comment"># 课程性质</span></span><br><span class="line">    lessionName = lesson[<span class="string">&#x27;lessionName&#x27;</span>].strip()  <span class="comment"># 课程名称</span></span><br><span class="line">    period = <span class="built_in">str</span>(lesson[<span class="string">&#x27;period&#x27;</span>]).strip()  <span class="comment"># 学时</span></span><br><span class="line">    credit = <span class="built_in">str</span>(lesson[<span class="string">&#x27;credit&#x27;</span>]).strip()  <span class="comment"># 学分</span></span><br><span class="line"></span><br><span class="line">    csv_writer.writerow([lessionNo, lessionTypeName, xingZhiName, lessionName, period, credit])</span><br></pre></td></tr></table></figure><p>结果便会在本地同级目录下生成<code>研1选课信息.csv</code>文件，打开页面一观：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302049337.png" alt="image-20240830204913995"></p><h3 id="其他">其他</h3><blockquote><p>发现即使用github的CDN加速，但是有些图片加载仍然很慢~</p><p>想找一个能将图片url进行压缩显示新图片的功能网站</p></blockquote><p>如果能找到，下篇博文应该会写这个了~</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> requests </tag>
            
            <tag> json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog5 研1开学必需品</title>
      <link href="/posts/a4a0e4e5.html"/>
      <url>/posts/a4a0e4e5.html</url>
      
        <content type="html"><![CDATA[<h3 id="材料类【必备】">材料类【必备】</h3><ul><li>录取通知书✅</li><li>身份证✅</li><li>本科毕业证和学位证✅</li><li>3张近期免冠正身一寸彩色照片✅</li><li>团员证✅</li><li>身份证复印件(需要再打印)</li><li>户口本复印件(不转户口暂时不用)</li></ul><h3 id="衣服类">衣服类</h3><blockquote><p>秋冬季节衣服</p></blockquote><ul><li>秋季薄卫衣2件✅</li><li>冬季厚卫衣2件✅</li><li>秋季薄长裤2件✅</li><li>秋季厚长裤1件✅</li><li>薄秋裤2件✅</li><li>薄秋衣3件✅</li><li>冬季厚袜子2双✅</li></ul><blockquote><p>春夏季节衣服</p></blockquote><ul><li>带2套夏季衣服(身上穿1套)✅</li><li>带若干双袜子✅</li><li>内裤3条(身上穿1条)✅</li></ul><h3 id="床上用品">床上用品</h3><ul><li>床单2件✅</li><li>枕巾2件✅</li></ul><h3 id="其他用品">其他用品</h3><ul><li>插排1个✅</li><li>台灯1个✅</li><li>文具若干✅</li><li>头戴式耳机1个✅</li><li>无线蓝牙耳机个✅</li><li>ipad + 荣耀平板✅</li><li>护眼仪1个✅</li><li>颈椎按摩仪1个✅</li><li>腰部按摩仪1个✅</li><li>电脑一个 + 书包背着(含配件)✅</li><li>对应充电器若干✅</li><li>大水杯1个✅</li><li>毛巾3条✅</li><li>牙刷若干 + 杯子1个✅</li><li>指甲钳套装✅</li></ul><h3 id="鞋子">鞋子</h3><ul><li>洞洞鞋1双✅(穿着走)</li><li>板鞋1双✅</li></ul><h3 id="待邮寄">待邮寄</h3><ul><li>冬天棉袄2件</li><li>鞋3双</li><li>冬季厚棉裤1件</li><li>围巾1条</li><li>保温杯1个</li><li>其他东西</li></ul><h3 id="需要网购">需要网购</h3><ul><li>脸盆2个</li><li>牙膏1只</li><li>洗衣液1桶</li><li>鞋刷1个</li><li>洗发精 + 肥皂</li><li>洗面奶1个</li><li>雨伞1个</li><li>衣架若干</li><li>纸巾</li><li>垃圾袋、垃圾桶、扫把(看舍友怎么说)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开学所带物品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog4 站点添加图库页面</title>
      <link href="/posts/524e63d6.html"/>
      <url>/posts/524e63d6.html</url>
      
        <content type="html"><![CDATA[<h3 id="创建界面">创建界面</h3><p>1、在<code>hexo</code>根目录下选择<code>Open Git Bash here</code>，在里面输入命令<code>hexo new page photos</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291610470.png" alt="image-20240829161016380"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291611273.png" alt="image-20240829161111211"></p><p>这样便会在<code>Hexo</code>根目录下的<code>/source</code>生成文件：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291612167.png" alt="image-20240829161221105"></p><p>2、打开<code>photos/index.md</code>文件，对<code>Front-matter</code>部分进行修改(侧边栏和评论区不展示)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: photos</span><br><span class="line">date: 2024-08-29 16:10:59</span><br><span class="line">aside: false</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>3、打开主题配置文件即<code>Blog\themes\butterfly\_config.yml</code>，对菜单部分进行修改：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291617817.png" alt="image-20240829161719477"></p><p>我这边将<code>photos</code>页面添加到了<code>清单</code>下面</p><p>此时，首页导航栏的<code>清单</code>列表下面便有<code>照片</code>界面，但是此时相册没有内容，只有一个空白框</p><p>可以使用<code>hexo clean &amp;&amp; hexo s</code>并在浏览器输入<code>localhost:4000</code>进行查看</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291620247.png" alt="image-20240829162020804"></p><h3 id="图库集合页">图库集合页</h3><p>是一个普通页面，如上面创建的<code>/photos/index.md</code>页面，下面将其设置为一个图库集合页面，设置图库集合页面是使用外挂标签来实现的，书写格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>此处<code>galleryGroup</code>设置内容如下：</p><ul><li><code>name</code>：图库名字</li><li><code>description</code>：图库描述</li><li><code>link</code>：链接到对应相册的地址</li><li><code>img-url</code>：图库封面的地址</li></ul><p>比如我准备上传一个图库，名字叫<code>可爱の小学生</code>，准备用<code>github</code>的<code>CDN</code>加速</p><p>参考我的 <a href="https://lures2019.github.io/2024/08/29/Blog3-%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/">Blog3 使用 Github 搭建免费图床</a></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291635249.png" alt="image-20240829163539747"></p><p>从手机通过百度网盘传输到电脑桌面，所在文件夹叫<code>小学生</code></p><p>目前图集只准备一个 图库，所以设置如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span><br><span class="line">&#123;% galleryGroup &#x27;可爱の小学生&#x27; &#x27;24年认识的小朋友&#x27; &#x27;primary_students&#x27; https://www.czblogs.cn/album/wallpaper.jpeg %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291653589.png" alt="image-20240829165353867"></p><p>可以看到本地测试结果正常，但是点击页面会跳转到<code>404.html</code>，因为子页面没设置</p><p>以后如果需要增加图片集，可以仿照上面的命令进行编写</p><h3 id="图库子页面">图库子页面</h3><p>1、在<code>hexo</code>博客根目录下面打开<code>git bash</code>，输入下面命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page primary_students</span><br></pre></td></tr></table></figure><p>然后会在博客根目录下面的<code>/source</code>下生成<code>primary_students</code>子文件夹，并在其中有一个名为<code>index.md</code>的文件，即对应着的<code>可爱の小学生</code>子页面！</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291658746.png" alt="image-20240829165804700"></p><p>但是发现<code>/source/primary_students/index.md</code>和<code>/source/photos/index.md</code>同级，所以需要将<code>primary_students</code>文件夹剪切到<code>photos</code>文件夹下面</p><p>2、开始在子页面<code>/source/photos/primary-students/index.md</code>中使用标签外挂挂上自己的照片，写法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![]()</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>这边图片我就将之前文件夹的所有照片贴在上面，会通过<code>PicGo</code>自动上传到<code>github</code>上获取到外链</p><p>外挂标签会自动根据图片的尺寸大小来调整图片的大小，只需要将图片罗列上去就行了！</p>]]></content>
      
      
      <categories>
          
          <category> 界面美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> butterfly </tag>
            
            <tag> PicGo </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog3 使用Github搭建免费图床</title>
      <link href="/posts/236e1c4a.html"/>
      <url>/posts/236e1c4a.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求">需求</h3><p>平常记笔记都是在<code>Typora</code>上，上传到<code>github</code>上也是<code>imgs</code>及<code>readme.md</code>，但是上传到其他平台就很麻烦，现在搭建了博客之后，希望通过<code>hexo new post 文章</code>然后编写<code>md</code>文件的时候图片不用相对路径，写完直接上传多爽</p><h3 id="介绍">介绍</h3><ul><li><code>github</code>的公有仓库个人可以创建很多个，当一个文件夹满仓了，可以创建新的仓库来使用~</li><li>单个仓库的容量很大，足够使用很长一段时间</li><li>配合<code>CDN</code>加速的话，访问速度会变快</li><li>使用本地上传工具方便我们快速上传图片，从而获取图片外链，所以使用<code>PicGo</code></li></ul><h3 id="教程">教程</h3><p>1、在<code>github</code>上创建图床仓库，如：<code>Typora_image_CDN</code>，仓库设置为<code>public</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291508766.png" alt="image-20240829150856700"></p><p>2、接着创建<code>Token</code></p><blockquote><p>注意：创建完成后复制生成的Token，保存到某处，退出该界面后再也无法查看Token，忘了存就再创一个</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291509236.png" alt="image-20240829150943102"></p><p>点击头像下方的<code>settings</code>，选择<code>Developer settings</code>，接着<code>person access tokens</code>，选择<code>tokens(classic)</code>，创建一个<code>classic</code>仓库后选择<code>No expiration</code>并勾选<code>repo</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291510281.png" alt="image-20240829151006201"></p><p>创建完成后复制所生成的<code>Token</code>，保存到某处</p><p>3、下载<code>PicGo</code>并配置</p><p>下载地址：<a href="https://github.com/Molunerfinn/picgo/releases">Releases · Molunerfinn/PicGo (github.com)</a></p><p>选择最新版本，安装后记住<code>PicGo</code>的安装目录</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291510898.png" alt="image-20240829151024856"></p><ul><li><p>设定仓库名，<code>你的github账户名/图床仓库名</code>，如<code>lures2019/Typora_image_CDN</code></p></li><li><p>设定分支名，默认是<code>main</code></p><ul><li><code>github</code>更新后默认分支由<code>master</code>改成了<code>main</code>，<code>PicGo</code>界面默认是<code>master</code>，需要修改，否则上传失败</li></ul></li><li><p>设定<code>Token</code>，即为刚才保存的<code>Token</code>码，复制粘贴到这里就好</p></li><li><p>指定存储路径：上传到<code>github</code>仓库下的那个路径，这里设置为图片存储在仓库的<code>PicGo/</code>目录下(注意末尾<code>/</code>)</p></li><li><p>设定自定义域名：为了使用<code>CDN</code>加速，此处设置为：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN</span><br></pre></td></tr></table></figure><p>注意后面没有<code>/</code>，且<code>lures2019</code>替换你的<code>github</code>账户名，<code>Typora_image_CDN</code>替换为你的仓库名</p></li></ul><p>4、<code>Typora</code>设置</p><p>打开<code>Typora</code>下面文件，接着选择<code>偏好设置</code>，找到图像一栏，设置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291517331.png" alt="image-20240829151747224"></p><p>设置完成后点击<code>验证图片上传选项</code>，若报错，可以参考下下面博文：</p><ul><li><a href="https://blog.csdn.net/TalesOV/article/details/104450037">PicGo踩坑记（上传失败，服务端出错，请重试）_为什么图片在picgo上传失败-CSDN博客</a></li><li>我遇到错误解决措施是：关闭<code>PicGo</code>并重新打开</li></ul><p>配置好后，在<code>Typora</code>写文章时，当我们插入图片时，<code>Typora</code>会自动调用<code>PicGo</code>程序，帮我们将图片上传到<code>Github</code>中去，然后将返回的图片地址进行替换，此时可以打开<code>Github</code>看到图床仓库中由图片了</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291520253.png" alt="image-20240829152023096"></p><p>5、<code>PicGo</code>其他设置</p><p>自己上传图片的时候很容易遇到重名现象，这边建议<code>PicGo</code>使用<strong>时间戳命名</strong>，可以保证命名是唯一的</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291522029.png" alt="image-20240829152225960"></p><h3 id="CDN使用图床示例">CDN使用图床示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291528537.png</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog2 使用Github搭建免费CDN</title>
      <link href="/posts/fca17c9b.html"/>
      <url>/posts/fca17c9b.html</url>
      
        <content type="html"><![CDATA[<h3 id="目标">目标</h3><p>将本地图片等资源上传到免费<code>CDN</code>上，方便<code>github</code>个人博客编写及后续配置的<code>Typora</code>自动上传图床等</p><h3 id="介绍">介绍</h3><p><code>jsDelivr</code>是一个免费的公共<code>CDN(内容分发网络)</code>，可用于快速和可靠地托管<code>Js、CSS、字体等静态资源</code>，通过<code>jsDelivr</code>，可以从<code>Github、npm</code>等多个源引入前端资源。</p><p><a href="https://www.jsdelivr.com/">jsDelivr官方文档</a></p><h3 id="详细步骤">详细步骤</h3><p>1、在<code>Github</code>上创建新仓库，仓库名设置为<code>images_CDN</code>，用于存放要上传到<code>CDN</code>的图片资源</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/1.png" alt=""></p><p>2、将仓库<code>images_CDN</code>克隆到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:lures2019/images_CDN.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/2.png" alt=""></p><p>3、进入本地仓库，并将需要上传的图片复制到本地的<code>images_CDN</code>目录下，再使用<code>push</code>传到远程仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd images_CDN</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;第一次传递img图片到CDN&quot;</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/3.png" alt=""></p><p>4、进入<code>github</code>仓库的<code>code</code>页面，点击右侧的<code>Releases</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/4.png" alt=""></p><p>5、点击<code>Draft a new release</code>，按照图片所示创建新的<code>tag</code>，如：<code>0.0.1</code></p><p>创建完成后可以点击<code>Publish release</code>进行发布，这样就可以使用<code>CDN</code>访问图片了</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/5.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/6.png" alt=""></p><p><code>CDN</code>访问的规则如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/&lt;username&gt;/&lt;<span class="attribute">repo</span> name&gt;@&lt;tag&gt;/&lt;resource name&gt;</span><br></pre></td></tr></table></figure><ul><li><code>username</code>即为你的<code>github</code>用户名，如：<code>lures2019</code></li><li><code>repo name</code>即为你创建的<code>github</code>仓库名，如：<code>images_CDN</code></li><li><code>tag</code>即为上述创建的标签名，如：<code>0.0.1</code></li><li><code>resource name</code>即你需要加载的资源名，如：<code>1.png</code></li></ul><p>6、查看<code>CDN</code>资源目录</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/7.png" alt=""></p><p>7、每一个<code>release</code>发布后，里面资源就不能添加了，若有需要，可以先删除<code>release</code>和<code>tag</code>再新建</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/8.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/9.png" alt=""></p><h3 id="题外话">题外话</h3><blockquote><p>针对博客最新文章前封面可能显示不出来，因为上传到github上页面层级太乱，相对路径不太适用</p><p>以后考虑发博客的时候放再图床上个再加载，这样博客封面不同且最新文章前面封面也能加载出来了</p></blockquote><p>另外，在发布文章的时候可以考虑先在本地测试下，没问题了再发</p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog1 使用Hexo搭建个人免费Github博客</title>
      <link href="/posts/87632e22.html"/>
      <url>/posts/87632e22.html</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><h3 id="更改博客缘由">更改博客缘由</h3><ul><li>利用<code>github</code>搭建的博客是<code>2019</code>年疫情期间做的，当时个人比较跳脱吧，所以做了很多中二的事情，到后来因为乱七八糟的原因博客便弃了；</li><li>后续也在<code>CSDN</code>、<code>博客园</code>等乱七八糟的平台零散更新过几篇文章，但是很多审核都过不了，很生气；</li><li>于是在<strong>研1</strong>开学几天的时间打算重新搭建个免费的博客网站，用来记录学习+吐槽</li></ul><h3 id="之前样式一览">之前样式一览</h3><p><img src="../../../../images/Blog1/%E4%B9%8B%E5%89%8D%E6%A0%B7%E5%BC%8F%E4%B8%80%E8%A7%88.png" alt=""></p><p><img src="../../../../images/Blog1/%E4%B8%80%E8%A7%882.png" alt=""></p><h3 id="之前博客源文件">之前博客源文件</h3><p><img src="../../../../images/Blog1/%E4%B9%8B%E5%89%8D%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81.png" alt=""></p><p>需要模板的可以自取：<a href="https://pan.baidu.com/s/1B1SpA8nnfvZE8FcfDGZkGg?pwd=ms90">https://pan.baidu.com/s/1B1SpA8nnfvZE8FcfDGZkGg?pwd=ms90</a></p><h1>模板调研</h1><p>根据浏览器搜索，常用的<code>github</code>搭建博客框架有：</p><ul><li><p><a href="https://github.com/leopardpan/leopardpan.github.io?tab=readme-ov-file">leopard</a></p></li><li><p>Jekyll可以参考下面模板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mzlogin/mzlogin.github.io</span><br><span class="line">https://github.com/Huxpro/huxpro.github.io</span><br><span class="line">https://blog.csdn.net/weixin_43871601/article/details/104248805</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/eryajf/vdoing-template">vdoing</a></p></li><li><p><a href="https://ysgstudyhards.github.io/Docsify-Guide/#/">Docsify</a></p></li><li><p><a href="https://hwh.zone/p/56326/">Hexo</a></p></li></ul><p>选来选去，感觉还是<code>hexo</code>搭建的博客比较符合我的审美~</p><p>在<code>hexo</code>的官网选择喜欢的<a href="https://hexo.io/themes/">主题</a>，个人审美初步筛选了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ch1ny/kira-hexo</span><br><span class="line">https://github.com/WinMin/Sw-blog</span><br><span class="line">https://github.com/jerryc127/hexo-theme-butterfly</span><br><span class="line">https://github.com/theme-shoka-x/hexo-theme-shokaX</span><br><span class="line">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</span><br></pre></td></tr></table></figure><p>有很多个，个人选择了第3个，后续也是按照此进行配置~</p><h1>详细配置</h1><p>参考文章：<a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)</a></p><p>跟着文章配置到<code>章节 7.3 更换主题</code>就行，后面看我记录</p><blockquote><p>Q1：npm安装packages过程中出现的npm fund</p></blockquote><p>在使用<code>npm</code>包进行安装的时候，提示类似下面信息不用管：</p><p><img src="../../../../images/Blog1/%E9%9D%9E%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF.png" alt=""></p><p>这个提示其实是说明有些模块开通了打赏功能，你可以使用<code>npm fund</code>查看打赏相应的信息</p><blockquote><p>Q2：hexo上传后打开页面显示404</p></blockquote><p>其实在文章所说的<code>_config.yml</code>文件进行修改，修改部分如图所示：</p><p><img src="../../../../images/Blog1/404.png" alt=""></p><p>现在便可以正常访问了，如下图所示：</p><p><img src="../../../../images/Blog1/hexo%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98.png" alt=""></p><blockquote><p>Q3：其他问题</p></blockquote><p><img src="../../../../images/Blog1/%E5%85%B6%E4%BB%96%E9%97%AE%E9%A2%98.png" alt=""></p><p>别的没啥要注意的，就是后续用默认主题写文章的时候，诸如<code>tags</code>等格式需要注意：</p><p><img src="../../../../images/Blog1/%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E6%96%B0%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F.png" alt=""></p><h3 id="下载主题">下载主题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>下载完成后，所在目录为：</p><p><img src="../../../../images/Blog1/butter.png" alt=""></p><h3 id="应用主题">应用主题</h3><p>在根目录下修改主配置文件：<code>_config.yml</code></p><p><img src="../../../../images/Blog1/%E4%BF%AE%E6%94%B9theme.png" alt=""></p><h3 id="安装相关插件">安装相关插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="测试">测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>出现报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/lures2019/lures2019.github.io.git/&#x27;: Failed to connect to github.com port 443 after 21140 ms: Couldn&#x27;t connect to server</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (F:\Blog\node_modules\hexo-deployer-git\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">    at ChildProcess.emit (node:events:519:28)</span><br><span class="line">    at cp.emit (F:\Blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">    at ChildProcess._handle.onexit (node:internal/child_process:294:12)</span><br></pre></td></tr></table></figure><p>解决办法：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式</p><p><img src="../../../../images/Blog1/%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt=""></p><h1>界面优化</h1><h3 id="标签页">标签页</h3><ol><li>前往<code>Hexo</code>博客的根目录</li><li>输入<code>hexo new page tags</code></li><li>会找到这个文件<code>source/tags/index.html</code></li><li>修改此文档：记得添加<code>type： “tags”</code></li></ol><p><img src="../../../../images/Blog1/tags%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0.png" alt=""></p><h3 id="分类页">分类页</h3><ol><li>前往<code>Hexo</code>根目录</li><li>输入<code>hexo new page categories</code></li><li>你会找到 这个文件<code>source/categories/index.md</code></li><li>修改此文档：记得添加<code>type： “categories”</code></li></ol><h3 id="友情链接页">友情链接页</h3><ol><li>前往<code>Hexo</code>根目录</li><li>输入<code>hexo new page link</code></li><li>你会找到这个文件<code>source/link/index.md</code></li><li>修改此文档：记得添加<code>type: &quot;link&quot;</code></li></ol><p>在<code>Hexo</code>博客目录中的 （如果没有 <code>_data</code> 文件夹，请自行创建），创建一个文件 <code>source/_datalink.yml</code></p><h3 id="配置404页面">配置404页面</h3><ol><li>打开<code>Blog/themes/butterfly/_config.yml</code>文件</li><li>修改第99行为<code>enable: true</code></li></ol><h3 id="导航栏设置-（Navigation-bar-settings）">导航栏设置 （Navigation bar settings）</h3><ol><li>打开主题配置文件</li><li>修改参数</li></ol><p><img src="../../../../images/Blog1/%E5%AF%BC%E8%88%AA%E6%A0%8F%E8%AE%BE%E7%BD%AE.png" alt=""></p><h3 id="修改菜单-目录">修改菜单/目录</h3><ol><li>修改主题配置文件</li><li>导航的文字可以自行修改</li></ol><p><img src="../../../../images/Blog1/%E8%8F%9C%E5%8D%95.png" alt=""></p><h3 id="代码-（Code-Blocks）">代码 （Code Blocks）</h3><p><code>Butterfly</code>支持6种代码高亮样式，个人选择了<code>mac</code>，即<code>highlight_theme: mac</code></p><p>支持代码复制功能，即<code>highlight_copy: true</code></p><p>设置代码框展开，有点击按钮<code>&gt;</code>，即<code>highlight_shrink: false</code></p><p>设置代码高度限制，超出的部分会隐藏，并显示展开按钮，即<code>highlight_height_limit: 100</code></p><h3 id="社交图标">社交图标</h3><p>Butterfly支持 <a href="https://fontawesome.com/icons?from=io">font-awesome v6</a> 图标.</p><p>书写格式为：<code>图标名：url || 描述性文字 || color</code></p><p><img src="../../../../images/Blog1/%E5%9B%BE%E6%A0%87.png" alt=""></p><h3 id="头像">头像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1）打开Blog\themes\butterfly\source\img</span><br><span class="line">2）下载一张图片命名为：avater,jpg</span><br></pre></td></tr></table></figure><p>修改主题配置文件，如下图所示：</p><p><img src="../../../../images/Blog1/%E5%A4%B4%E5%83%8F.png" alt=""></p><h3 id="Hexo集成Algolia实现搜索功能">Hexo集成Algolia实现搜索功能</h3><h1>暂未实现的功能</h1><ul><li>Algolia等网页搜索功能</li><li>valine自定义表情包</li><li>Daovoice的appid找不到了，在线聊天官网打不开了（只能使用chatra）</li><li><s>google广告，个人识别码暂时无</s></li><li>网站验证</li></ul><h1>参考文献</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">https://hwh.zone/p/56326/</span><br><span class="line">https://zhuanlan.zhihu.com/p/60578464</span><br><span class="line">https://docs-hexo.shokax.top/getting-started/</span><br><span class="line">https://blog.csdn.net/qq_45173404/article/details/122861321</span><br><span class="line">https://github.com/GamerNoTitle/Valine-Magic</span><br><span class="line">https://butterfly.js.org/posts/507c070f/</span><br><span class="line">https://blog.csdn.net/weixin_58068682/article/details/116612364</span><br><span class="line">https://github.com/mythsman/hexo-douban</span><br><span class="line">https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-artitalk</span><br><span class="line">https://dreamhomes.github.io/posts/202106171704/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
