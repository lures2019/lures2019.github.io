<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Blog12 猫咪奢华假期，从大兴旧宫寄养中心开始！</title>
      <link href="/posts/a4724e6a.html"/>
      <url>/posts/a4724e6a.html</url>
      
        <content type="html"><![CDATA[<video width="600" height="400" controls>  <source src="https://raw.githubusercontent.com/lures2019/Typora_image_CDN/refs/heads/main/8bd50fc19d9cdf5c0bdecb3fcc7970f8.mp4" type="video/mp4">  Your browser does not support the video tag.</video><p>【猫咪奢华假期，从大兴旧宫寄养中心开始！】</p><p>🌟宠物爸妈必看！大兴旧宫藏着一处猫咪的天堂——超豪华寄养中心，让您的喵主子享受五星级待遇！</p><p>🏡每一只喵星人都能拥有独立多层别墅，宽敞空间自由奔跑，攀爬嬉戏无拘无束，尽享贵族般的居住体验！</p><p>👩🏻‍⚕️安全守护，我们从不松懈！24小时监控无死角，给爱宠最坚实的健康保障。</p><p>💰性价比之王！价格亲民，让豪华不再遥不可及，轻松为爱宠预订一个难忘的假期。</p><p>⏰小长假临近，快人一步预订吧！大兴旧宫寄养中心，让您的猫咪在温馨与专业中度过每一个欢乐时光。</p><p>📱即刻添加微信 Mao18514255750，了解更多详情，为您的猫咪预订专属幸福假期！别让爱等待，给喵主子一个惊喜吧！#北京猫咪寄养中心#猫咪寄养#宠物寄养</p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会公益 </tag>
            
            <tag> 志愿活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog11 华为杯数学建模比赛</title>
      <link href="/posts/b0c85e88.html"/>
      <url>/posts/b0c85e88.html</url>
      
        <content type="html"><![CDATA[<h3 id="过程">过程</h3><p>和杨兄是在水导群认识的，当时看了他的建立觉得他很厉害，然后就看他朋友圈说找个数学建模队友，然后当时有点不好意思的加入了。到比赛前也没一起训练，比赛第一天他有课，我跟肖兄就是看了看题，仅有的进度就是第一天晚上11点多一起开了个语音选择了地理大数据题即<code>D</code>题。</p><p>第二天和第三天其实也没啥进度，就好像是我跟肖兄各搞个的，我用<code>Gpt 4o-plus</code>和网上的一个思路对已有的数据集做处理然后数据可视化，第四天和第五天开始赶进度，第四天我还是跟着网上思路对另一个数据集进行处理，使用多元线性回归、多项式回归、随机森林、<code>SVR</code>这些模型对数据进行训练，然后过采样欠采样损失函数这种使模型呈现出的效果好点。第五天凌晨2点多水完第三问，总之留给论文的时间不多了，所以最后论文出现了很多格式上的问题没有时间修改，几乎没得奖希望了！</p><h3 id="感触">感触</h3><ul><li>这次建模确实挺累的，两天只睡了5h左右</li><li>论文写作也不是难事，不要想着一步到位，可以先利用<code>gpt</code>等将初版写好，后面再改进</li><li>从项目中学习，进步的才会更快，<code>gpt4o-plus</code>该买还是买，确实方便</li></ul><h3 id="学习了">学习了</h3><ul><li>在远程服务器上跑模型</li><li>如何根据已有实验完成论文的初稿</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409251818417.png" alt="image-20240925181814353"></p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog10 Zotero使用教程</title>
      <link href="/posts/8b48d892.html"/>
      <url>/posts/8b48d892.html</url>
      
        <content type="html"><![CDATA[<h3 id="Preface">Preface</h3><p>科创公司这边最近给了3份论文让我们改版式，于是在之前<code>MathType</code>配置好了之后，也是成功用在论文修改中了，感觉使用后确实挺方便，下面来简单看一下效果：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409191727703.png" alt="image-20240919172715640"></p><p>右对齐且式右边编号修改后能自动改变引用，真的挺方便，大伙有机会可以试试！</p><p>跟博士师姐说了之后建议我再使用下<code>Zotero</code>，于是便有了本期笔记！<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p><h3 id="References">References</h3><h4 id="Zotero零基础保姆级教程"><a href="https://www.bilibili.com/video/BV1o3411Q7JQ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=e3d69e895d76a53ec59141bcdd17b141">Zotero零基础保姆级教程</a></h4><ul><li><p>在首选项中设置语言、文件夹存放位置</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\data\Zotero</span><br></pre></td></tr></table></figure></li><li><p>建立文件夹进行分类，然后文献导入</p><p>使用浏览器插件，可以讲页面的内容导入到对应的目标文件夹中</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409191904414.png" alt="image-20240919190452314"></p></li><li><p><code>shift</code> + 文献拖动 从一个文件夹到另一个文件夹，不同时归属于两个文件夹</p></li><li><p><code>ctrl</code> + 文献 可以看到当前文件归属于哪个文件夹</p></li><li><p>可以自己管理标签</p></li><li><p>在<code>word</code>中可以使用<code>Zotero</code>方便引用</p></li></ul><h4 id="Zotero文献管理软件使用指南——入门篇"><a href="https://blog.csdn.net/l903445981/article/details/119960684">Zotero文献管理软件使用指南——入门篇</a></h4><p>视频中提到的<a href="https://github.com/l0o0/jasminum">茉莉花插件</a>可以在这里面下载</p><h4 id="Zotero-translators-中文仓库"><a href="https://github.com/l0o0/translators_CN">Zotero translators 中文仓库</a></h4><p>针对中文文献下载的一个工具，此时便可以下载包括知网在内的很多论文了！</p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zotero </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog9 MathType使用笔记</title>
      <link href="/posts/fc844b8e.html"/>
      <url>/posts/fc844b8e.html</url>
      
        <content type="html"><![CDATA[<h3 id="破解安装">破解安装</h3><p>有能力可以支持正版，<code>30</code>天免费试用。</p><p>破解版安装教程到微信公众号或者浏览器上搜索，之前看了很多文章都被删了。</p><h3 id="参考资料">参考资料</h3><h5 id="学术论文写作时，word中Mathtype的使用"><a href="https://www.bilibili.com/video/BV1TL4y1A7pX/?spm_id_from=333.337.search-card.all.click&amp;vd_source=e3d69e895d76a53ec59141bcdd17b141">学术论文写作时，word中Mathtype的使用</a></h5><p>博主主要介绍了几点：</p><ul><li>在<code>word</code>写论文中要插入行间公式时可以选择<code>右编号</code>，此时论文公式会自动右对齐</li><li>要进行<code>式(0.1)</code>这种引用公式时可以使用选项<code>插入引用</code>然后选择上面公式，这样即使公式变动也能自动更新</li><li>当一行中符号往上飘的时候，可以选择<code>切换Tex</code>点<code>2</code>次，结果会正常</li><li>可以在<code>MathType</code>的<code>预置--&gt;工作区预置--&gt;允许从键盘输入TeX语言</code></li></ul><h4 id="找Mathpix平替">找Mathpix平替</h4><p><a href="https://simpletex.net/">SimpleTex主页——致力于提供先进的公式识别/文档识别解决方案</a></p><h4 id="PPT利用LaTeX输入公式">PPT利用LaTeX输入公式</h4><p><a href="https://blog.csdn.net/lyh458/article/details/130768651">PPT / Powerpoint中利用LaTeX输入公式_ppt插入latex公式-CSDN博客</a></p><p>参考这篇文章下载对应的插件，然后<code>PPT</code>启用宏，在添加过程中遇到<code>信任</code>问题，可以参考下面文章：</p><p><a href="https://blog.csdn.net/weixin_46585199/article/details/130298023">一定解决Excel“安全风险 microsoft 已阻止宏运行 因为此文件的来源不受信任问题”_microsoft已阻止宏运行,因为此文件的来源不受信任-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> MathType </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog8 Python爬取线代班级名单</title>
      <link href="/posts/346d96ca.html"/>
      <url>/posts/346d96ca.html</url>
      
        <content type="html"><![CDATA[<h4 id="大致介绍">大致介绍</h4><p>上线性代数与矩阵论B的时候加了老师微信，浅问了一个问题，然后老师就认为我是一个勤奋努力的孩子，教师节的时候顺手发了个祝福，然后老师就让我当课代表收发作业了。</p><p>好多年没当课代表了，尤其是现在几乎没多少认识的人，有点诚惶诚恐，于是想着提前把班级名单爬下来，然后收作业的时候可以给人打勾，到时候给老师发过去。</p><p>想法还好，下午就要第一次收作业了，祝我好运！</p><h4 id="爬虫代码">爬虫代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> parsel</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Spider</span>():</span><br><span class="line">    url = <span class="string">&quot;http://yjsglxt.cumtb.edu.cn/Gstudent/Course/ClassStudent.aspx?EID=boJN9rxzJT9s-R0vsK2M7ZrxGKNuWLTFwKWQAx!NdLv9WtXpfH1vCg%3d%3d&amp;UID=&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;LoginType=1; DropDownListWeeks=1; ASP.NET_SessionId=iqekgu3in4kqraxef5wuddpj; DropDownListXqu=; DropDownListYx_xsbh=&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;yjsglxt.cumtb.edu.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;origin&#x27;</span>: <span class="string">&#x27;http://yjsglxt.cumtb.edu.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;http://yjsglxt.cumtb.edu.cn/Gstudent/Course/ClassStudent.aspx?EID=mdhL4OSciaEFztuyJzfZqXKcPFvgtDX84VosnP321!aj0H0VBxK6EA==&amp;UID=MSJ2410100010&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36 Edg/128.0.0.0&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    response.encoding = response.apparent_encoding</span><br><span class="line">    <span class="comment"># 构建爬取原则</span></span><br><span class="line">    select = parsel.Selector(response.text)</span><br><span class="line">    results = select.xpath(<span class="string">&#x27;//table[@id=&quot;ctl00_contentParent_dgData&quot;]/tr&#x27;</span>).getall()</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;线性代数班级.csv&quot;</span>, mode=<span class="string">&quot;a+&quot;</span>, newline=<span class="string">&quot;&quot;</span>, encoding=<span class="string">&quot;utf-8-sig&quot;</span>)</span><br><span class="line">    csv_writer = csv.writer(f)</span><br><span class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> results[<span class="number">1</span>:-<span class="number">1</span>]:</span><br><span class="line">        sel = parsel.Selector(result)</span><br><span class="line">        <span class="built_in">id</span> = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">0</span>].get()  <span class="comment"># 学号</span></span><br><span class="line">        name = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">1</span>].get()  <span class="comment"># 姓名</span></span><br><span class="line">        sex = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">2</span>].extract()  <span class="comment"># 性别</span></span><br><span class="line">        grade = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">3</span>].extract()  <span class="comment"># 年级</span></span><br><span class="line">        college = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[<span class="number">4</span>].extract()  <span class="comment"># 所属院系</span></span><br><span class="line">        major = sel.xpath(<span class="string">&quot;//td/text()&quot;</span>)[-<span class="number">1</span>].extract()  <span class="comment"># 专业名称</span></span><br><span class="line"></span><br><span class="line">        csv_writer.writerow([<span class="built_in">id</span>, name, sex, grade, college, major])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 以追加写的方式创建一个csv文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;线性代数班级.csv&quot;</span>, mode=<span class="string">&quot;a+&quot;</span>, newline=<span class="string">&quot;&quot;</span>, encoding=<span class="string">&quot;utf-8-sig&quot;</span>)</span><br><span class="line">    csv_writer = csv.writer(f)</span><br><span class="line">    csv_writer.writerow([<span class="string">&quot;学号&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;性别&quot;</span>, <span class="string">&quot;年级&quot;</span>, <span class="string">&quot;所属院系&quot;</span>, <span class="string">&quot;专业名称&quot;</span>])</span><br><span class="line">    <span class="comment"># 后面调用函数</span></span><br><span class="line">    Spider()</span><br></pre></td></tr></table></figure><p>这个页面是个<code>post</code>请求，且比较奇怪的一点在于此<code>post</code>在原网页上并不能通过<code>page</code>等参数来跳转的下一页，爬虫的时候发现的规律是需要自己手动点，然后爬虫，所以为了<code>csv</code>文件的美观，我是把<code>main</code>里面的文件操作先注释，直到最后一次再取消注释，最后标签其实会写到<code>csv</code>文件的最后一行，需要手动剪切插入到第一行。</p><p>注意：如果自己需要修改的话，确保登录状态，然后自己按照请求头等信息修改！</p><h4 id="效果一览">效果一览</h4><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409110910314.png" alt="image-20240911091021104"></p><h4 id="最近工作">最近工作</h4><p>最近导师那边的科创中心经常安排杂活，个人的学习受到了影响，导师长时间不回复的行为有时候会让我很内耗，昨晚就想来想去失眠到1点多，仔细想了想，放弃导师的指导，自己按照培养计划研一完成毕业要求，后面自己学点东西。不抱期待，不受伤害！</p><p>昨天上了个集团专家的科技写作课，昨晚整理公司所属非核心期刊的时候发现了一篇论文给了灵感，最近今天准备读下<code>10</code>篇左右相关的论文并完成前置算法的学习及代码的编写，希望这个月能完成论文的初稿！</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> requests </tag>
            
            <tag> parsel </tag>
            
            <tag> csv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog7 英语学习计划</title>
      <link href="/posts/a965601.html"/>
      <url>/posts/a965601.html</url>
      
        <content type="html"><![CDATA[<h3 id="Preface">Preface</h3><p>昨天去煤科总院开了研究生开学典礼及开学第一课，听了专家们讲座对研究生阶段的学习有了些比较清楚的认知，但是这不是最重要的，个人觉得最重要的事情是关于英语学习方面的事：</p><ul><li>英语六级考到500+方便以后的申博【研1要考过，后续不让考了】</li><li>雅思考到6.5以上可以走公司的澳大利亚新南威尔士和<a href="https://zhida.zhihu.com/search?q=%E4%BC%8D%E4%BC%A6%E8%B4%A1&amp;zhida_source=entity&amp;is_preview=1">伍伦贡</a>大学的项目，拿双学位证书【计划研1过】</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202409040717966.png" alt="新南威尔士雅思成绩要求"></p><p>其他学校语言要求：<a href="https://www.chinaielts.org/about_ielts/global_recognition_ranking/91324.shtml#:~:text=Massachuse">2024年QS世界大学排名TOP200及雅思要求 - 各国院校机构排名 - 认可的国家与机构 - 选择雅思 - 首页 (chinaielts.org)</a></p><h3 id="六级备考">六级备考</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">报名时间：</span><br><span class="line">2024年9月20日12：00~9月25日17：00</span><br><span class="line">笔试时间：</span><br><span class="line">2024年12月14日(101天)</span><br><span class="line">复习资料：</span><br><span class="line">20天背完六级核心词汇(ipad/炭炭背) + 真题(张建1黄皮书已买)</span><br></pre></td></tr></table></figure><p>1、单词</p><p>词书<code>1</code>天<code>1</code>个<code>list</code>，边听录音边盯着词书来记忆，一个<code>list</code>录音放完之后挡住自测，这样<code>循环5次</code>左右，直到有几个词总是不会，<strong>再用抄写来记忆</strong>，最后自测基本无误后结束。</p><ul><li>先集中背英译汉，再汉译英</li><li>高频词背完英汉互译，要给自己默写英译汉和汉译英<strong>两轮</strong></li><li>有时间把中频词同样的操作，低频词和零频词可以不管</li></ul><p>2、听力(真题)</p><ul><li>做听力真题像考试时一样，赶在文本播放前先划选项关键词</li><li>先看文本听录音过一遍，遇到不会的词和短语标注，后面再重复1次，然后闭着眼睛听不会的勾出来，睡前再听一次，早读读一次</li></ul><p>3、阅读(真题)</p><ul><li>练真题掐时间，告诉自己<code>50</code>分钟一到立刻停笔</li><li>阅读文本尽量不留死角，从文段到题目选项，难词、长难句都弄懂，好的句式、词组要积累下来，对写作和翻译有用</li></ul><p>4、真题(写作翻译)</p><ul><li>阅读文本积累的好词好句在写作中能用到</li><li>写作的谋篇布局要有逻辑</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">计划安排：</span><br><span class="line">1）每天新单词100个，理论上41天完成【最高压力值600词/天】</span><br><span class="line">2）阅读每周精度2篇</span><br><span class="line">3）听力每周完成一套精听</span><br><span class="line">4）写作翻译每周各来一次</span><br><span class="line">5）早读在自习室过一下艾宾浩斯单词 + 精读后的阅读 + 精听后的听力</span><br><span class="line"></span><br><span class="line">tips:</span><br><span class="line">- 可以在干别的事累了之后做，养成习惯</span><br><span class="line">- 以一个新blog的形式记录每周任务完成否，更细致的可以记录当天都做了什么(考完之后上传)</span><br></pre></td></tr></table></figure><h3 id="雅思备考">雅思备考</h3><p>暂时不急，等<code>大学英语六级</code>考过了之后再说，寒假的时候可以着手处理</p>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语学习 </tag>
            
            <tag> 未来规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog6 Python爬取研1必修课及选修课</title>
      <link href="/posts/4f71efd0.html"/>
      <url>/posts/4f71efd0.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求">需求</h3><p>今天下午开组会，当半主动的向老师要求研一期间参与项目，要老师以严厉的方式对待后~</p><p>老师让把研究生选课信息发给他看，选择跟我们方向比较相关的<code>选修课</code>，在获取足够的选修学分同时也能对未来的项目有些许帮助</p><p>于是便有了本篇<code>blog</code>，下面简单带大家看一下~</p><h3 id="爬虫分析">爬虫分析</h3><p>1、无论是以何种形式存放数据，我们需要做的第一步便是获取网站的数据，先让我们看下浏览器页面(快捷键<code>Fn</code> + <code>F12</code>)</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302041575.png" alt="image-20240830204148445"></p><p>2、找到存放数据的文件</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302043727.png" alt="image-20240830204323469"></p><p>3、查看请求头等信息</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302045293.png" alt="image-20240830204548231"></p><p>4、既然通过上面分析发现数据是json格式，考虑用<code>csv</code>文件进行存储，因为可以按照单元格的值进行筛选</p><h3 id="爬虫源码">爬虫源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://125.34.90.207:8090/prod-api/psmp/lession/trainScheme/requirement?trainSchemeId=82&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;填写你的cookie&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;authorization&#x27;</span>: <span class="string">&#x27;填写你的authorization&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;125.34.90.207:8090&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;http://125.34.90.207:8090/student/plan/selectPlan&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36 Edg/128.0.0.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(url, headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding</span><br><span class="line">data = json.loads(response.text)</span><br><span class="line">lessons = data[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;lessionList&#x27;</span>]</span><br><span class="line"><span class="comment"># 创建csv文件存储爬取的数据</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;研1选课信息.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">csv_writer = csv.writer(file)</span><br><span class="line">csv_writer.writerow([<span class="string">&quot;课程编号&quot;</span>, <span class="string">&quot;课程分类&quot;</span>, <span class="string">&quot;课程性质&quot;</span>, <span class="string">&quot;课程名称&quot;</span>, <span class="string">&quot;学时&quot;</span>, <span class="string">&quot;学分&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> lesson <span class="keyword">in</span> lessons:</span><br><span class="line">    <span class="comment"># 获取每个课程的信息</span></span><br><span class="line">    lessionNo = lesson[<span class="string">&#x27;lessionNo&#x27;</span>].strip()  <span class="comment"># 课程编号</span></span><br><span class="line">    lessionTypeName = lesson[<span class="string">&#x27;lessionTypeName&#x27;</span>].strip()  <span class="comment"># 课程分类</span></span><br><span class="line">    xingZhiName = lesson[<span class="string">&#x27;xingZhiName&#x27;</span>].strip()  <span class="comment"># 课程性质</span></span><br><span class="line">    lessionName = lesson[<span class="string">&#x27;lessionName&#x27;</span>].strip()  <span class="comment"># 课程名称</span></span><br><span class="line">    period = <span class="built_in">str</span>(lesson[<span class="string">&#x27;period&#x27;</span>]).strip()  <span class="comment"># 学时</span></span><br><span class="line">    credit = <span class="built_in">str</span>(lesson[<span class="string">&#x27;credit&#x27;</span>]).strip()  <span class="comment"># 学分</span></span><br><span class="line"></span><br><span class="line">    csv_writer.writerow([lessionNo, lessionTypeName, xingZhiName, lessionName, period, credit])</span><br></pre></td></tr></table></figure><p>结果便会在本地同级目录下生成<code>研1选课信息.csv</code>文件，打开页面一观：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408302049337.png" alt="image-20240830204913995"></p><h3 id="其他">其他</h3><blockquote><p>发现即使用github的CDN加速，但是有些图片加载仍然很慢~</p><p>想找一个能将图片url进行压缩显示新图片的功能网站</p></blockquote><p>如果能找到，下篇博文应该会写这个了~</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> requests </tag>
            
            <tag> json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog5 研1开学必需品</title>
      <link href="/posts/a4a0e4e5.html"/>
      <url>/posts/a4a0e4e5.html</url>
      
        <content type="html"><![CDATA[<h3 id="材料类【必备】">材料类【必备】</h3><ul><li>录取通知书✅</li><li>身份证✅</li><li>本科毕业证和学位证✅</li><li>3张近期免冠正身一寸彩色照片✅</li><li>团员证✅</li><li>身份证复印件(需要再打印)</li><li>户口本复印件(不转户口暂时不用)</li></ul><h3 id="衣服类">衣服类</h3><blockquote><p>秋冬季节衣服</p></blockquote><ul><li>秋季薄卫衣2件✅</li><li>冬季厚卫衣2件✅</li><li>秋季薄长裤2件✅</li><li>秋季厚长裤1件✅</li><li>薄秋裤2件✅</li><li>薄秋衣3件✅</li><li>冬季厚袜子2双✅</li></ul><blockquote><p>春夏季节衣服</p></blockquote><ul><li>带2套夏季衣服(身上穿1套)✅</li><li>带若干双袜子✅</li><li>内裤3条(身上穿1条)✅</li></ul><h3 id="床上用品">床上用品</h3><ul><li>床单2件✅</li><li>枕巾2件✅</li></ul><h3 id="其他用品">其他用品</h3><ul><li>插排1个✅</li><li>台灯1个✅</li><li>文具若干✅</li><li>头戴式耳机1个✅</li><li>无线蓝牙耳机个✅</li><li>ipad + 荣耀平板✅</li><li>护眼仪1个✅</li><li>颈椎按摩仪1个✅</li><li>腰部按摩仪1个✅</li><li>电脑一个 + 书包背着(含配件)✅</li><li>对应充电器若干✅</li><li>大水杯1个✅</li><li>毛巾3条✅</li><li>牙刷若干 + 杯子1个✅</li><li>指甲钳套装✅</li></ul><h3 id="鞋子">鞋子</h3><ul><li>洞洞鞋1双✅(穿着走)</li><li>板鞋1双✅</li></ul><h3 id="待邮寄">待邮寄</h3><ul><li>冬天棉袄2件</li><li>鞋3双</li><li>冬季厚棉裤1件</li><li>围巾1条</li><li>保温杯1个</li><li>其他东西</li></ul><h3 id="需要网购">需要网购</h3><ul><li>脸盆2个</li><li>牙膏1只</li><li>洗衣液1桶</li><li>鞋刷1个</li><li>洗发精 + 肥皂</li><li>洗面奶1个</li><li>雨伞1个</li><li>衣架若干</li><li>纸巾</li><li>垃圾袋、垃圾桶、扫把(看舍友怎么说)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学校生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开学所带物品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog4 站点添加图库页面</title>
      <link href="/posts/524e63d6.html"/>
      <url>/posts/524e63d6.html</url>
      
        <content type="html"><![CDATA[<h3 id="Ubuntu22-04-下蓝牙配对">Ubuntu22.04 下蓝牙配对</h3>]]></content>
      
      
      <categories>
          
          <category> 界面美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> butterfly </tag>
            
            <tag> PicGo </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog4 站点添加图库页面</title>
      <link href="/posts/524e63d6.html"/>
      <url>/posts/524e63d6.html</url>
      
        <content type="html"><![CDATA[<h3 id="创建界面">创建界面</h3><p>1、在<code>hexo</code>根目录下选择<code>Open Git Bash here</code>，在里面输入命令<code>hexo new page photos</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291610470.png" alt="image-20240829161016380"></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291611273.png" alt="image-20240829161111211"></p><p>这样便会在<code>Hexo</code>根目录下的<code>/source</code>生成文件：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291612167.png" alt="image-20240829161221105"></p><p>2、打开<code>photos/index.md</code>文件，对<code>Front-matter</code>部分进行修改(侧边栏和评论区不展示)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: photos</span><br><span class="line">date: 2024-08-29 16:10:59</span><br><span class="line">aside: false</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>3、打开主题配置文件即<code>Blog\themes\butterfly\_config.yml</code>，对菜单部分进行修改：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291617817.png" alt="image-20240829161719477"></p><p>我这边将<code>photos</code>页面添加到了<code>清单</code>下面</p><p>此时，首页导航栏的<code>清单</code>列表下面便有<code>照片</code>界面，但是此时相册没有内容，只有一个空白框</p><p>可以使用<code>hexo clean &amp;&amp; hexo s</code>并在浏览器输入<code>localhost:4000</code>进行查看</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291620247.png" alt="image-20240829162020804"></p><h3 id="图库集合页">图库集合页</h3><p>是一个普通页面，如上面创建的<code>/photos/index.md</code>页面，下面将其设置为一个图库集合页面，设置图库集合页面是使用外挂标签来实现的，书写格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>此处<code>galleryGroup</code>设置内容如下：</p><ul><li><code>name</code>：图库名字</li><li><code>description</code>：图库描述</li><li><code>link</code>：链接到对应相册的地址</li><li><code>img-url</code>：图库封面的地址</li></ul><p>比如我准备上传一个图库，名字叫<code>可爱の小学生</code>，准备用<code>github</code>的<code>CDN</code>加速</p><p>参考我的 <a href="https://lures2019.github.io/2024/08/29/Blog3-%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/">Blog3 使用 Github 搭建免费图床</a></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291635249.png" alt="image-20240829163539747"></p><p>从手机通过百度网盘传输到电脑桌面，所在文件夹叫<code>小学生</code></p><p>目前图集只准备一个 图库，所以设置如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span><br><span class="line">&#123;% galleryGroup &#x27;可爱の小学生&#x27; &#x27;24年认识的小朋友&#x27; &#x27;primary_students&#x27; https://www.czblogs.cn/album/wallpaper.jpeg %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291653589.png" alt="image-20240829165353867"></p><p>可以看到本地测试结果正常，但是点击页面会跳转到<code>404.html</code>，因为子页面没设置</p><p>以后如果需要增加图片集，可以仿照上面的命令进行编写</p><h3 id="图库子页面">图库子页面</h3><p>1、在<code>hexo</code>博客根目录下面打开<code>git bash</code>，输入下面命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page primary_students</span><br></pre></td></tr></table></figure><p>然后会在博客根目录下面的<code>/source</code>下生成<code>primary_students</code>子文件夹，并在其中有一个名为<code>index.md</code>的文件，即对应着的<code>可爱の小学生</code>子页面！</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291658746.png" alt="image-20240829165804700"></p><p>但是发现<code>/source/primary_students/index.md</code>和<code>/source/photos/index.md</code>同级，所以需要将<code>primary_students</code>文件夹剪切到<code>photos</code>文件夹下面</p><p>2、开始在子页面<code>/source/photos/primary-students/index.md</code>中使用标签外挂挂上自己的照片，写法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![]()</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>这边图片我就将之前文件夹的所有照片贴在上面，会通过<code>PicGo</code>自动上传到<code>github</code>上获取到外链</p><p>外挂标签会自动根据图片的尺寸大小来调整图片的大小，只需要将图片罗列上去就行了！</p>]]></content>
      
      
      <categories>
          
          <category> 界面美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> butterfly </tag>
            
            <tag> PicGo </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog3 使用Github搭建免费图床</title>
      <link href="/posts/236e1c4a.html"/>
      <url>/posts/236e1c4a.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求">需求</h3><p>平常记笔记都是在<code>Typora</code>上，上传到<code>github</code>上也是<code>imgs</code>及<code>readme.md</code>，但是上传到其他平台就很麻烦，现在搭建了博客之后，希望通过<code>hexo new post 文章</code>然后编写<code>md</code>文件的时候图片不用相对路径，写完直接上传多爽</p><h3 id="介绍">介绍</h3><ul><li><code>github</code>的公有仓库个人可以创建很多个，当一个文件夹满仓了，可以创建新的仓库来使用~</li><li>单个仓库的容量很大，足够使用很长一段时间</li><li>配合<code>CDN</code>加速的话，访问速度会变快</li><li>使用本地上传工具方便我们快速上传图片，从而获取图片外链，所以使用<code>PicGo</code></li></ul><h3 id="教程">教程</h3><p>1、在<code>github</code>上创建图床仓库，如：<code>Typora_image_CDN</code>，仓库设置为<code>public</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291508766.png" alt="image-20240829150856700"></p><p>2、接着创建<code>Token</code></p><blockquote><p>注意：创建完成后复制生成的Token，保存到某处，退出该界面后再也无法查看Token，忘了存就再创一个</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291509236.png" alt="image-20240829150943102"></p><p>点击头像下方的<code>settings</code>，选择<code>Developer settings</code>，接着<code>person access tokens</code>，选择<code>tokens(classic)</code>，创建一个<code>classic</code>仓库后选择<code>No expiration</code>并勾选<code>repo</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291510281.png" alt="image-20240829151006201"></p><p>创建完成后复制所生成的<code>Token</code>，保存到某处</p><p>3、下载<code>PicGo</code>并配置</p><p>下载地址：<a href="https://github.com/Molunerfinn/picgo/releases">Releases · Molunerfinn/PicGo (github.com)</a></p><p>选择最新版本，安装后记住<code>PicGo</code>的安装目录</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291510898.png" alt="image-20240829151024856"></p><ul><li><p>设定仓库名，<code>你的github账户名/图床仓库名</code>，如<code>lures2019/Typora_image_CDN</code></p></li><li><p>设定分支名，默认是<code>main</code></p><ul><li><code>github</code>更新后默认分支由<code>master</code>改成了<code>main</code>，<code>PicGo</code>界面默认是<code>master</code>，需要修改，否则上传失败</li></ul></li><li><p>设定<code>Token</code>，即为刚才保存的<code>Token</code>码，复制粘贴到这里就好</p></li><li><p>指定存储路径：上传到<code>github</code>仓库下的那个路径，这里设置为图片存储在仓库的<code>PicGo/</code>目录下(注意末尾<code>/</code>)</p></li><li><p>设定自定义域名：为了使用<code>CDN</code>加速，此处设置为：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN</span><br></pre></td></tr></table></figure><p>注意后面没有<code>/</code>，且<code>lures2019</code>替换你的<code>github</code>账户名，<code>Typora_image_CDN</code>替换为你的仓库名</p></li></ul><p>4、<code>Typora</code>设置</p><p>打开<code>Typora</code>下面文件，接着选择<code>偏好设置</code>，找到图像一栏，设置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291517331.png" alt="image-20240829151747224"></p><p>设置完成后点击<code>验证图片上传选项</code>，若报错，可以参考下下面博文：</p><ul><li><a href="https://blog.csdn.net/TalesOV/article/details/104450037">PicGo踩坑记（上传失败，服务端出错，请重试）_为什么图片在picgo上传失败-CSDN博客</a></li><li>我遇到错误解决措施是：关闭<code>PicGo</code>并重新打开</li></ul><p>配置好后，在<code>Typora</code>写文章时，当我们插入图片时，<code>Typora</code>会自动调用<code>PicGo</code>程序，帮我们将图片上传到<code>Github</code>中去，然后将返回的图片地址进行替换，此时可以打开<code>Github</code>看到图床仓库中由图片了</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291520253.png" alt="image-20240829152023096"></p><p>5、<code>PicGo</code>其他设置</p><p>自己上传图片的时候很容易遇到重名现象，这边建议<code>PicGo</code>使用<strong>时间戳命名</strong>，可以保证命名是唯一的</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291522029.png" alt="image-20240829152225960"></p><h3 id="CDN使用图床示例">CDN使用图床示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/lures2019/Typora_image_CDN/PicGo/202408291528537.png</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> PicGo </tag>
            
            <tag> jsDelivr </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog2 使用Github搭建免费CDN</title>
      <link href="/posts/fca17c9b.html"/>
      <url>/posts/fca17c9b.html</url>
      
        <content type="html"><![CDATA[<h3 id="目标">目标</h3><p>将本地图片等资源上传到免费<code>CDN</code>上，方便<code>github</code>个人博客编写及后续配置的<code>Typora</code>自动上传图床等</p><h3 id="介绍">介绍</h3><p><code>jsDelivr</code>是一个免费的公共<code>CDN(内容分发网络)</code>，可用于快速和可靠地托管<code>Js、CSS、字体等静态资源</code>，通过<code>jsDelivr</code>，可以从<code>Github、npm</code>等多个源引入前端资源。</p><p><a href="https://www.jsdelivr.com/">jsDelivr官方文档</a></p><h3 id="详细步骤">详细步骤</h3><p>1、在<code>Github</code>上创建新仓库，仓库名设置为<code>images_CDN</code>，用于存放要上传到<code>CDN</code>的图片资源</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/1.png" alt=""></p><p>2、将仓库<code>images_CDN</code>克隆到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:lures2019/images_CDN.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/2.png" alt=""></p><p>3、进入本地仓库，并将需要上传的图片复制到本地的<code>images_CDN</code>目录下，再使用<code>push</code>传到远程仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd images_CDN</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;第一次传递img图片到CDN&quot;</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/3.png" alt=""></p><p>4、进入<code>github</code>仓库的<code>code</code>页面，点击右侧的<code>Releases</code></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/4.png" alt=""></p><p>5、点击<code>Draft a new release</code>，按照图片所示创建新的<code>tag</code>，如：<code>0.0.1</code></p><p>创建完成后可以点击<code>Publish release</code>进行发布，这样就可以使用<code>CDN</code>访问图片了</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/5.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/6.png" alt=""></p><p><code>CDN</code>访问的规则如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/&lt;username&gt;/&lt;<span class="attribute">repo</span> name&gt;@&lt;tag&gt;/&lt;resource name&gt;</span><br></pre></td></tr></table></figure><ul><li><code>username</code>即为你的<code>github</code>用户名，如：<code>lures2019</code></li><li><code>repo name</code>即为你创建的<code>github</code>仓库名，如：<code>images_CDN</code></li><li><code>tag</code>即为上述创建的标签名，如：<code>0.0.1</code></li><li><code>resource name</code>即你需要加载的资源名，如：<code>1.png</code></li></ul><p>6、查看<code>CDN</code>资源目录</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/7.png" alt=""></p><p>7、每一个<code>release</code>发布后，里面资源就不能添加了，若有需要，可以先删除<code>release</code>和<code>tag</code>再新建</p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/8.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lures2019/images_CDN@0.0.1/9.png" alt=""></p><h3 id="题外话">题外话</h3><blockquote><p>针对博客最新文章前封面可能显示不出来，因为上传到github上页面层级太乱，相对路径不太适用</p><p>以后考虑发博客的时候放再图床上个再加载，这样博客封面不同且最新文章前面封面也能加载出来了</p></blockquote><p>另外，在发布文章的时候可以考虑先在本地测试下，没问题了再发</p>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog1 使用Hexo搭建个人免费Github博客</title>
      <link href="/posts/87632e22.html"/>
      <url>/posts/87632e22.html</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><h3 id="更改博客缘由">更改博客缘由</h3><ul><li>利用<code>github</code>搭建的博客是<code>2019</code>年疫情期间做的，当时个人比较跳脱吧，所以做了很多中二的事情，到后来因为乱七八糟的原因博客便弃了；</li><li>后续也在<code>CSDN</code>、<code>博客园</code>等乱七八糟的平台零散更新过几篇文章，但是很多审核都过不了，很生气；</li><li>于是在<strong>研1</strong>开学几天的时间打算重新搭建个免费的博客网站，用来记录学习+吐槽</li></ul><h3 id="之前样式一览">之前样式一览</h3><p><img src="../../../../images/Blog1/%E4%B9%8B%E5%89%8D%E6%A0%B7%E5%BC%8F%E4%B8%80%E8%A7%88.png" alt=""></p><p><img src="../../../../images/Blog1/%E4%B8%80%E8%A7%882.png" alt=""></p><h3 id="之前博客源文件">之前博客源文件</h3><p><img src="../../../../images/Blog1/%E4%B9%8B%E5%89%8D%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81.png" alt=""></p><p>需要模板的可以自取：<a href="https://pan.baidu.com/s/1B1SpA8nnfvZE8FcfDGZkGg?pwd=ms90">https://pan.baidu.com/s/1B1SpA8nnfvZE8FcfDGZkGg?pwd=ms90</a></p><h1>模板调研</h1><p>根据浏览器搜索，常用的<code>github</code>搭建博客框架有：</p><ul><li><p><a href="https://github.com/leopardpan/leopardpan.github.io?tab=readme-ov-file">leopard</a></p></li><li><p>Jekyll可以参考下面模板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mzlogin/mzlogin.github.io</span><br><span class="line">https://github.com/Huxpro/huxpro.github.io</span><br><span class="line">https://blog.csdn.net/weixin_43871601/article/details/104248805</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/eryajf/vdoing-template">vdoing</a></p></li><li><p><a href="https://ysgstudyhards.github.io/Docsify-Guide/#/">Docsify</a></p></li><li><p><a href="https://hwh.zone/p/56326/">Hexo</a></p></li></ul><p>选来选去，感觉还是<code>hexo</code>搭建的博客比较符合我的审美~</p><p>在<code>hexo</code>的官网选择喜欢的<a href="https://hexo.io/themes/">主题</a>，个人审美初步筛选了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ch1ny/kira-hexo</span><br><span class="line">https://github.com/WinMin/Sw-blog</span><br><span class="line">https://github.com/jerryc127/hexo-theme-butterfly</span><br><span class="line">https://github.com/theme-shoka-x/hexo-theme-shokaX</span><br><span class="line">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</span><br></pre></td></tr></table></figure><p>有很多个，个人选择了第3个，后续也是按照此进行配置~</p><h1>详细配置</h1><p>参考文章：<a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)</a></p><p>跟着文章配置到<code>章节 7.3 更换主题</code>就行，后面看我记录</p><blockquote><p>Q1：npm安装packages过程中出现的npm fund</p></blockquote><p>在使用<code>npm</code>包进行安装的时候，提示类似下面信息不用管：</p><p><img src="../../../../images/Blog1/%E9%9D%9E%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF.png" alt=""></p><p>这个提示其实是说明有些模块开通了打赏功能，你可以使用<code>npm fund</code>查看打赏相应的信息</p><blockquote><p>Q2：hexo上传后打开页面显示404</p></blockquote><p>其实在文章所说的<code>_config.yml</code>文件进行修改，修改部分如图所示：</p><p><img src="../../../../images/Blog1/404.png" alt=""></p><p>现在便可以正常访问了，如下图所示：</p><p><img src="../../../../images/Blog1/hexo%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98.png" alt=""></p><blockquote><p>Q3：其他问题</p></blockquote><p><img src="../../../../images/Blog1/%E5%85%B6%E4%BB%96%E9%97%AE%E9%A2%98.png" alt=""></p><p>别的没啥要注意的，就是后续用默认主题写文章的时候，诸如<code>tags</code>等格式需要注意：</p><p><img src="../../../../images/Blog1/%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E6%96%B0%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F.png" alt=""></p><h3 id="下载主题">下载主题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>下载完成后，所在目录为：</p><p><img src="../../../../images/Blog1/butter.png" alt=""></p><h3 id="应用主题">应用主题</h3><p>在根目录下修改主配置文件：<code>_config.yml</code></p><p><img src="../../../../images/Blog1/%E4%BF%AE%E6%94%B9theme.png" alt=""></p><h3 id="安装相关插件">安装相关插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="测试">测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>出现报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/lures2019/lures2019.github.io.git/&#x27;: Failed to connect to github.com port 443 after 21140 ms: Couldn&#x27;t connect to server</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (F:\Blog\node_modules\hexo-deployer-git\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">    at ChildProcess.emit (node:events:519:28)</span><br><span class="line">    at cp.emit (F:\Blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">    at ChildProcess._handle.onexit (node:internal/child_process:294:12)</span><br></pre></td></tr></table></figure><p>解决办法：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式</p><p><img src="../../../../images/Blog1/%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt=""></p><h1>界面优化</h1><h3 id="标签页">标签页</h3><ol><li>前往<code>Hexo</code>博客的根目录</li><li>输入<code>hexo new page tags</code></li><li>会找到这个文件<code>source/tags/index.html</code></li><li>修改此文档：记得添加<code>type： “tags”</code></li></ol><p><img src="../../../../images/Blog1/tags%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0.png" alt=""></p><h3 id="分类页">分类页</h3><ol><li>前往<code>Hexo</code>根目录</li><li>输入<code>hexo new page categories</code></li><li>你会找到 这个文件<code>source/categories/index.md</code></li><li>修改此文档：记得添加<code>type： “categories”</code></li></ol><h3 id="友情链接页">友情链接页</h3><ol><li>前往<code>Hexo</code>根目录</li><li>输入<code>hexo new page link</code></li><li>你会找到这个文件<code>source/link/index.md</code></li><li>修改此文档：记得添加<code>type: &quot;link&quot;</code></li></ol><p>在<code>Hexo</code>博客目录中的 （如果没有 <code>_data</code> 文件夹，请自行创建），创建一个文件 <code>source/_datalink.yml</code></p><h3 id="配置404页面">配置404页面</h3><ol><li>打开<code>Blog/themes/butterfly/_config.yml</code>文件</li><li>修改第99行为<code>enable: true</code></li></ol><h3 id="导航栏设置-（Navigation-bar-settings）">导航栏设置 （Navigation bar settings）</h3><ol><li>打开主题配置文件</li><li>修改参数</li></ol><p><img src="../../../../images/Blog1/%E5%AF%BC%E8%88%AA%E6%A0%8F%E8%AE%BE%E7%BD%AE.png" alt=""></p><h3 id="修改菜单-目录">修改菜单/目录</h3><ol><li>修改主题配置文件</li><li>导航的文字可以自行修改</li></ol><p><img src="../../../../images/Blog1/%E8%8F%9C%E5%8D%95.png" alt=""></p><h3 id="代码-（Code-Blocks）">代码 （Code Blocks）</h3><p><code>Butterfly</code>支持6种代码高亮样式，个人选择了<code>mac</code>，即<code>highlight_theme: mac</code></p><p>支持代码复制功能，即<code>highlight_copy: true</code></p><p>设置代码框展开，有点击按钮<code>&gt;</code>，即<code>highlight_shrink: false</code></p><p>设置代码高度限制，超出的部分会隐藏，并显示展开按钮，即<code>highlight_height_limit: 100</code></p><h3 id="社交图标">社交图标</h3><p>Butterfly支持 <a href="https://fontawesome.com/icons?from=io">font-awesome v6</a> 图标.</p><p>书写格式为：<code>图标名：url || 描述性文字 || color</code></p><p><img src="../../../../images/Blog1/%E5%9B%BE%E6%A0%87.png" alt=""></p><h3 id="头像">头像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1）打开Blog\themes\butterfly\source\img</span><br><span class="line">2）下载一张图片命名为：avater,jpg</span><br></pre></td></tr></table></figure><p>修改主题配置文件，如下图所示：</p><p><img src="../../../../images/Blog1/%E5%A4%B4%E5%83%8F.png" alt=""></p><h3 id="Hexo集成Algolia实现搜索功能">Hexo集成Algolia实现搜索功能</h3><h1>暂未实现的功能</h1><ul><li>Algolia等网页搜索功能</li><li>valine自定义表情包</li><li>Daovoice的appid找不到了，在线聊天官网打不开了（只能使用chatra）</li><li><s>google广告，个人识别码暂时无</s></li><li>网站验证</li></ul><h1>参考文献</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">https://hwh.zone/p/56326/</span><br><span class="line">https://zhuanlan.zhihu.com/p/60578464</span><br><span class="line">https://docs-hexo.shokax.top/getting-started/</span><br><span class="line">https://blog.csdn.net/qq_45173404/article/details/122861321</span><br><span class="line">https://github.com/GamerNoTitle/Valine-Magic</span><br><span class="line">https://butterfly.js.org/posts/507c070f/</span><br><span class="line">https://blog.csdn.net/weixin_58068682/article/details/116612364</span><br><span class="line">https://github.com/mythsman/hexo-douban</span><br><span class="line">https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-artitalk</span><br><span class="line">https://dreamhomes.github.io/posts/202106171704/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
